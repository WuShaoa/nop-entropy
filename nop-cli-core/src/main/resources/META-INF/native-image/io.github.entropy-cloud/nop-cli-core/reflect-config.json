[
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "boolean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "attrs",
        "parameterTypes": []
      },
      {
        "name": "containsLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLabelByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOptionByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOptionByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOptionCount",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getValueByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueType",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isNormalized",
        "parameterTypes": []
      },
      {
        "name": "isStatic",
        "parameterTypes": []
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalized",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictOptionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.resource.IResourceReference",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHARSET_ISO_8859_1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHARSET_UTF8"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENCODING_UTF8"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "FUTURE_DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "INVALID_DATE"
      }
    ],
    "methods": [
      {
        "name": "appendQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "decodeURL",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeURL",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "encodeStringMap",
        "parameterTypes": [
          "java.util.Map",
          "char",
          "char"
        ]
      },
      {
        "name": "encodeURL",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeURL",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "hasText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfInRange",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "isAllDigit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllZero",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAsciiLetter",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isBlank",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDigit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "isEmptyObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isNotBlank",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNotEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSpace",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.String"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "onlyChars",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean",
          "java.lang.String"
        ]
      },
      {
        "name": "parseSlotScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseStringMap",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "char"
        ]
      },
      {
        "name": "renderTemplate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "renderTemplate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "renderTemplate2",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "renderTemplateForScope",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "strip",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "stripedSplit",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "stripedSplit",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ApiStringHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.IComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLocation",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationGetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationSetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "s_loc"
      }
    ],
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "forPostcompile",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "forPrecompile",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "forPrecompile2",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "forProjectTpl",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getTargetPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTplPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadTpl",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "loadTpl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadTplFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "newCodeGenerator",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renderModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "runPostcompile",
        "parameterTypes": [
          "java.io.File",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "runPrecompile",
        "parameterTypes": [
          "java.io.File",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "runPrecompile2",
        "parameterTypes": [
          "java.io.File",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "runProjectFile",
        "parameterTypes": [
          "java.io.File",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "withTargetDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "withTplDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.codegen.XCodeGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "addMethod",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredMethods",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicMethods",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isUnsafeAllocated",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "setAllDeclaredConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllDeclaredMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnsafeAllocated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectClass",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllowUnsafeAccess",
        "parameterTypes": []
      },
      {
        "name": "isAllowWrite",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "setAllowUnsafeAccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowWrite",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getSignature",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParameterTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toParamString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectMethod",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenAfterInitialization",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAllUnique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "emptyList",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "freezeList",
        "parameterTypes": []
      },
      {
        "name": "fromList",
        "parameterTypes": [
          "java.util.List",
          "java.util.function.Function"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.collections.KeyedList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "expandList",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "pop",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "push",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      },
      {
        "name": "push",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "reduceRight",
        "parameterTypes": [
          "java.util.List",
          "java.util.function.BiFunction",
          "java.lang.Object"
        ]
      },
      {
        "name": "reverse",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "shift",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "slice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "java.lang.Integer"
        ]
      },
      {
        "name": "splice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "int"
        ]
      },
      {
        "name": "splice",
        "parameterTypes": [
          "java.util.List",
          "int",
          "int",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "unshift",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object"
        ]
      },
      {
        "name": "unshift",
        "parameterTypes": [
          "java.util.List",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "io.nop.commons.collections.ListFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "concat",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "every",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "hasNext",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "includes",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "reduce",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.BiFunction",
          "java.lang.Object"
        ]
      },
      {
        "name": "some",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.commons.collections.SetFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.lang.ITagSetSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "lower"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "upper"
      }
    ],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.text.CharacterCase",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ANY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARRAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BIGINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BOOLEAN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHAR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DECIMAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DOUBLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FLOAT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GEOMETRY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTEGER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JSON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NUMERIC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "OTHER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SMALLINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIMESTAMP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TINYINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VARBINARY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VARCHAR"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromJdbcType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJdbcType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "isAllowScale",
        "parameterTypes": []
      },
      {
        "name": "isCompatibleWith",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.type.StdSqlType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "COMPACT_DATE_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "COMPACT_DATE_TIME_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE_FORMATTER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_DAY_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_HOUR_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ONE_MINUTE_TS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME_FORMATTER"
      }
    ],
    "methods": [
      {
        "name": "buildFormatter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "currentDate",
        "parameterTypes": []
      },
      {
        "name": "currentDateTime",
        "parameterTypes": []
      },
      {
        "name": "currentLocalDate",
        "parameterTypes": []
      },
      {
        "name": "currentTimeMillis",
        "parameterTypes": []
      },
      {
        "name": "dateDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "dateMillis",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "dateTimeToMillis",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "dateTimeToTimestamp",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "dateToMillis",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "diffDays",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfNextMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfNextYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstDayOfYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "firstInMonth",
        "parameterTypes": [
          "java.time.LocalDate",
          "int"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatJavaDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalTime",
        "parameterTypes": [
          "java.time.LocalTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatTime",
        "parameterTypes": [
          "java.time.LocalTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp",
          "java.lang.String"
        ]
      },
      {
        "name": "fromUTC",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDayStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDayStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getDayStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getDayStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getHourStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getHourStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMinuteStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMinuteStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getMonthStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getMonthStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getQuarterStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getQuarterStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getWeekStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getWeekStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearEnd",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearEndTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearEndWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearEndWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearStart",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearStartTs",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "getYearStartWithTimeZone",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "getYearStartWithTimeZoneTs",
        "parameterTypes": [
          "java.util.TimeZone",
          "long"
        ]
      },
      {
        "name": "isMonthDay",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.MonthDay"
        ]
      },
      {
        "name": "lastDayOfMonth",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "lastDayOfYear",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "localDateMillis",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "localDateTimeToMillis",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "localDateTimeToTimestamp",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "localDateToMillis",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "millisToDate",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToDateTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToLocalDate",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "millisToLocalDateTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "monthDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "parseDataTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDuration",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseLocalDataTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseLocalDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerFormatter",
        "parameterTypes": [
          "java.lang.String",
          "java.time.format.DateTimeFormatter"
        ]
      },
      {
        "name": "toDayOfWeek",
        "parameterTypes": [
          "java.time.LocalDate",
          "int"
        ]
      },
      {
        "name": "toUTC",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "toZone",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.time.ZoneId"
        ]
      },
      {
        "name": "yearDiff",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.LocalDate"
        ]
      },
      {
        "name": "zone",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.commons.util.DateHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHARSET_1252"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DIGITS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_BYTES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_STRING"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_STRINGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENV_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENV_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HTML_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HTML_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_NAME_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_NAME_CHARS_STR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_NAME_REPLS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_PATH_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INVALID_FILE_PATH_CHARS_STR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JAVA_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JAVA_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JSON_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JSON_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LINE_PATTERN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOWER_CASE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REGEX_BR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REGEX_P"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REGEX_TAG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SPECIAL_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SQL_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SQL_ESCAPE_CHARS_SLASH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SQL_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SQL_ESCAPE_STRS_SLASH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "UPPER_CASE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_ATTR_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_ATTR_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_ESCAPE_STRS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_VALUE_ESCAPE_CHARS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_VALUE_ESCAPE_STRS"
      }
    ],
    "methods": [
      {
        "name": "_containsControlAscii",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "_escapeControlAscii",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "_indexOf",
        "parameterTypes": [
          "[C",
          "char"
        ]
      },
      {
        "name": "_isValidXmlNamePart",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "_searchNotDigit",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "_toString",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "_unescapeXml",
        "parameterTypes": [
          "char",
          "char",
          "char",
          "char"
        ]
      },
      {
        "name": "absolutePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "appendPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "arrayAwareToString",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "asRawText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "beanPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bytesToHex",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "bytesToHex",
        "parameterTypes": [
          "[B",
          "boolean"
        ]
      },
      {
        "name": "camelCase",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "camelCase",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      },
      {
        "name": "camelCaseToHyphen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "camelCaseToUnderscore",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "capitalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "chompStartChars",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "classNameToPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "colCodeToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "commaDelimitedListToSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "commaDelimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "configVarToEnv",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsAnyChar",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.String"
        ]
      },
      {
        "name": "containsDigits",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsLowerCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsSpecialChar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsUpperCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsWhitespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "countChar",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "countContains",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "decapitalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeBase64",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "decodeDupEscape",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "decodeHexByte",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int"
        ]
      },
      {
        "name": "decodeHexNibble",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "decodeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteAny",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "delimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "delimitedListToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "dropZero",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "emptyAsNull",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeBase64",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "encodeBase64Url",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "encodeDupEscape",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "encodeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "encodeQuery",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "encodeQuery",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "encodeUriPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "endWith",
        "parameterTypes": [
          "java.lang.CharSequence",
          "char"
        ]
      },
      {
        "name": "endsWithIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "envToConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escape",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[C",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "escapeCRLF",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "escapeCharTo",
        "parameterTypes": [
          "char",
          "[C",
          "[Ljava.lang.String;",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeHtml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJava",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJavadoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeJsonCharTo",
        "parameterTypes": [
          "char",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeJsonTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "escapeTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[C",
          "[Ljava.lang.String;",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeUnicode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlAttrTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeXmlTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeXmlValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeXmlValueTo",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Appendable"
        ]
      },
      {
        "name": "escapeYaml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileNameNoExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "filePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fileSizeString",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "fileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "firstPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "forEachTemplateVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachTemplateVar",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "formatDate",
        "parameterTypes": [
          "java.util.Date",
          "java.lang.String"
        ]
      },
      {
        "name": "formatDegree",
        "parameterTypes": [
          "java.lang.Number"
        ]
      },
      {
        "name": "formatLocalDate",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.lang.String"
        ]
      },
      {
        "name": "formatLocalDateTime",
        "parameterTypes": [
          "java.time.LocalDateTime",
          "java.lang.String"
        ]
      },
      {
        "name": "formatNumber",
        "parameterTypes": [
          "java.lang.Number"
        ]
      },
      {
        "name": "formatNumber",
        "parameterTypes": [
          "java.lang.Number",
          "java.lang.String"
        ]
      },
      {
        "name": "fullClassName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateUUID",
        "parameterTypes": []
      },
      {
        "name": "generateUUID",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getXmlProlog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "hasLength",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "head",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "hexToBytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hmacSha256",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "i18n",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfAnyChar",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.String"
        ]
      },
      {
        "name": "indexOfIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "intToHex",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "internList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isAbsolutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllAsciiLetter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllChar",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "isAsciiVarPart",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "isAsciiVarStart",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "isCanonicalFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmptyObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isGraphQLNamePart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isGraphQLNameStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isHexChar",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isInt",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "isJavaDefaultImportType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isJavaIdentifierPart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isJavaIdentifierStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isJavaKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isJavaScriptKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isNonNegativeInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNumber",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "isQuotedString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSafeAsciiToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSecretVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSpaceInLine",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isValidClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidFormat",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isValidHtmlAttrName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidJavaVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidNopModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidNopModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidSimpleVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidVPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidXmlName",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "isValidXmlNamespaceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isWhitespace",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isXLangKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isXmlNamePart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isXmlNameStart",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isYes",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "joinArray",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "lastPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "lastPart",
        "parameterTypes": [
          "java.lang.String",
          "char",
          "boolean"
        ]
      },
      {
        "name": "leftPad",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "char"
        ]
      },
      {
        "name": "limitLen",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int"
        ]
      },
      {
        "name": "limitLen",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int"
        ]
      },
      {
        "name": "limitUtf8Len",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int"
        ]
      },
      {
        "name": "limitUtfLen",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int"
        ]
      },
      {
        "name": "longToHex",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "lowerCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "maskPattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "maskSecretVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "matchPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchSimplePattern",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "matchSimplePatternSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "matchSimplePatterns",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "matchWildcard",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "maybeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "md5Hash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "methodAdd",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodGet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodGet",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "methodMake",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "methodSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "nextName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "nextPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "normalizeCRLF",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "normalizeClassName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "normalizeComment",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeConfigVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onlyContainsWhitespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "packageName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseCsvList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDegree",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseFileSizeString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseGenericComponentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseInt",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "parseNumber",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseQuery",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "parseSimpleQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "pathEndsWith",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "pathStartsWith",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "quote",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "quoteDupEscapeString",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "quoteIfNecessary",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "randomDigits",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "randomString",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "randomString",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "randomString",
        "parameterTypes": [
          "int",
          "java.lang.String",
          "io.nop.commons.util.random.IRandom"
        ]
      },
      {
        "name": "relativizePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeEnd",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeFileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeFileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeHead",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeHtmlTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeLastPart",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "removeStart",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeTail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "repeat",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceChars",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFileExt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFileType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "rightPad",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "char"
        ]
      },
      {
        "name": "safeFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "safeToString",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "sha256Hash",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "sha512Hash",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "shortText",
        "parameterTypes": [
          "java.lang.CharSequence",
          "int",
          "int"
        ]
      },
      {
        "name": "simpleClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simplifyJavaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simplifyJavaType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "simplifyStdJavaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "skip",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "splitDupEscaped",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "splitToArray",
        "parameterTypes": [
          "java.lang.String",
          "char"
        ]
      },
      {
        "name": "splitToLines",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "startWith",
        "parameterTypes": [
          "java.lang.CharSequence",
          "char"
        ]
      },
      {
        "name": "startsWithAt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "startsWithIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithPackage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "startsWithPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "tail",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "toAbsolutePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "toCharset",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "toStringArray",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "tokenizeToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "tokenizeToStringArray",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "trimLeft",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeJava",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unescapeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unquote",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unquoteDupEscapeString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "upperCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "utf8Bytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "utf8Length",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "wrapExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlNameToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlNameToVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xmlValueNeedEscape",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.commons.util.StringHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.config.initialize.ConfigInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.config.source.IConfigSource"
        ]
      },
      {
        "name": "createConnection",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRefreshInterval",
        "parameterTypes": []
      },
      {
        "name": "getSelectAllQuery",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSelectAllQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valid",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.config.source.jdbc.JdbcConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.dict.DictModelParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.CoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.ReflectionHelperMethodInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.VirtualFileSystemInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.lang.json.IJsonSerializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkReadOnly",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "flatten",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachEntry",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getLocValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.json.JObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ANY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARRAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BIGINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BOOLEAN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHAR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DECIMAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DOUBLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FLOAT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GEOMETRY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTEGER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JSON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NUMERIC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "OTHER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SMALLINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIMESTAMP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TINYINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VARBINARY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VARCHAR"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromJdbcType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJdbcType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "isAllowScale",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.sql.StdSqlType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "chunk",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "compact",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "countBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "filterNull",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findIndex",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "getFieldValue",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "groupBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexByFields",
        "parameterTypes": [
          "java.util.Collection",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "invert",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "mergeMap",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "omit",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "pairs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "partition",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "pick",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pickNotNull",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pluck",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckAsMap",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckThenJoin",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "rename",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "retainAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "sortBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "toJObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toKeyedList",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "unique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.lang.utils.Underscore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "calcChildMatchCount",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "calcMatchCount",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "containsAllAttrs",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "findBestMatch",
        "parameterTypes": [
          "java.util.List",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "mergeIfAbsent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "normalizeMerged",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      }
    ],
    "name": "io.nop.core.lang.utils.XNodeMergeHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_assignAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "_assignParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "_getElements",
        "parameterTypes": []
      },
      {
        "name": "_isAllChildText",
        "parameterTypes": []
      },
      {
        "name": "_isAnyChildCDATA",
        "parameterTypes": []
      },
      {
        "name": "_isElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "java.lang.String"
        ]
      },
      {
        "name": "addAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "after",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "after",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendBodyXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "appendBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "appendScript",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "appendTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "assureAtMostOneChild",
        "parameterTypes": []
      },
      {
        "name": "attachChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "attrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer"
        ]
      },
      {
        "name": "attrLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "attrTextOrEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": []
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": []
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyToXJson",
        "parameterTypes": []
      },
      {
        "name": "checkNotReadOnly",
        "parameterTypes": []
      },
      {
        "name": "child",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "childByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childIndex",
        "parameterTypes": []
      },
      {
        "name": "childIndexOfSameTag",
        "parameterTypes": []
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childrenByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenToJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAttrs",
        "parameterTypes": []
      },
      {
        "name": "clearBody",
        "parameterTypes": []
      },
      {
        "name": "clearChildren",
        "parameterTypes": []
      },
      {
        "name": "clearComment",
        "parameterTypes": []
      },
      {
        "name": "clearLocation",
        "parameterTypes": []
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "closest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectXPath",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "commonAncestor",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "content",
        "parameterTypes": []
      },
      {
        "name": "content",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "content",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "contentAsInt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "contentText",
        "parameterTypes": []
      },
      {
        "name": "countChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "countChildByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "countChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "depth",
        "parameterTypes": []
      },
      {
        "name": "detach",
        "parameterTypes": []
      },
      {
        "name": "detachChildren",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "element",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elementAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "elementText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elements",
        "parameterTypes": []
      },
      {
        "name": "elements",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findAllByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "firstChild",
        "parameterTypes": []
      },
      {
        "name": "firstLeaf",
        "parameterTypes": []
      },
      {
        "name": "forEachAttr",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachNode",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "fullXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrCount",
        "parameterTypes": []
      },
      {
        "name": "getAttrNames",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getDocType",
        "parameterTypes": []
      },
      {
        "name": "getDumpString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstruction",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getParentParent",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagNameWithoutNs",
        "parameterTypes": []
      },
      {
        "name": "getTreeLevel",
        "parameterTypes": []
      },
      {
        "name": "getXmlnsForUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttr",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBody",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasContent",
        "parameterTypes": []
      },
      {
        "name": "hasMixedContent",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": []
      },
      {
        "name": "innerHtml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "insertAfterXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "insertAfterXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "insertBeforeXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "insertBeforeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "insertChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "insertChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "insertParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isCDataText",
        "parameterTypes": []
      },
      {
        "name": "isDummyNode",
        "parameterTypes": []
      },
      {
        "name": "isElementNode",
        "parameterTypes": []
      },
      {
        "name": "isTextNode",
        "parameterTypes": []
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.commons.functional.IEqualsChecker"
        ]
      },
      {
        "name": "jsonText",
        "parameterTypes": []
      },
      {
        "name": "jsonText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastChild",
        "parameterTypes": []
      },
      {
        "name": "lastLeaf",
        "parameterTypes": []
      },
      {
        "name": "make",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeDocNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeNode",
        "parameterTypes": []
      },
      {
        "name": "makeTextNode",
        "parameterTypes": []
      },
      {
        "name": "matchAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "mergeAttrs",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "needAddJsonPrefix",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newAttrError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode",
          "java.lang.String"
        ]
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "nextElementSibling",
        "parameterTypes": []
      },
      {
        "name": "nextLeaf",
        "parameterTypes": []
      },
      {
        "name": "nextSibling",
        "parameterTypes": []
      },
      {
        "name": "normalizeContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeScriptContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "outerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "output",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalOutput"
        ]
      },
      {
        "name": "ownText",
        "parameterTypes": []
      },
      {
        "name": "parent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "parents",
        "parameterTypes": []
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependBodyXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prependBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "prependChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prevElementSibling",
        "parameterTypes": []
      },
      {
        "name": "prevLeaf",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeHandler"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrs",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeAttrsIf",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "removeAttrsWithPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "removeChildByIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "removeNextSiblings",
        "parameterTypes": []
      },
      {
        "name": "renameAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameChild",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameNsPrefix",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceBy",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceByList",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "replaceByXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "requireAttrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "root",
        "parameterTypes": []
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "selectMany",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "selectOne",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDocType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.IXNodeExtension"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstruction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "syncAllExtensionFromNode",
        "parameterTypes": []
      },
      {
        "name": "syncAllExtensionToNode",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "toXJson",
        "parameterTypes": []
      },
      {
        "name": "transformAttr",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": []
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "updateSelected",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector",
          "java.lang.Object"
        ]
      },
      {
        "name": "visit",
        "parameterTypes": [
          "io.nop.core.model.tree.ITreeVisitor"
        ]
      },
      {
        "name": "wrapChildren",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.xml.XNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "defineGlobalVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "defineLoopVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "defineLoopVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "isGlobalVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isLoopVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.model.loop.impl.NestedLoopBuilder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "defineMethod",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalFunction",
          "boolean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "makeComplexPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "method_invoke",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "obj_name",
        "parameterTypes": []
      },
      {
        "name": "obj_propValues",
        "parameterTypes": []
      },
      {
        "name": "prop_allow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.object.DynamicObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "parseOrderBy",
        "parameterTypes": [
          "io.nop.commons.text.tokenizer.TextScanner"
        ]
      },
      {
        "name": "parseOrderField",
        "parameterTypes": [
          "io.nop.commons.text.tokenizer.TextScanner"
        ]
      }
    ],
    "name": "io.nop.core.model.query.OrderBySqlParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.tree.ITreeChildrenStructure",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getPublishDate",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "isDynamic",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDynamic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.module.ModuleModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropGetMissingHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyExtPropsTo",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "getExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowedExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeExtPropsIfAbsent",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_remove",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.reflect.hook.SerializableExtensibleObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.resource.IFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResourceLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "s_zipTool"
      }
    ],
    "methods": [
      {
        "name": "assertDirectory",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "buildClassPath",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "buildDeltaPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildNamespacePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildResourceFromURL",
        "parameterTypes": [
          "java.lang.String",
          "java.net.URL"
        ]
      },
      {
        "name": "buildTenantPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildTextScanner",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "checkNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "checkValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidRelativeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "dumpResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "filePostfixFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "genDayRandPath",
        "parameterTypes": []
      },
      {
        "name": "getAppProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "getCpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeltaLayerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDumpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleIdFromModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleIdFromStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleNameFromModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOverrideVFsDir",
        "parameterTypes": []
      },
      {
        "name": "getParentPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPathNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelatedResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStepListener",
        "parameterTypes": [
          "io.nop.api.core.util.progress.IProgressListener",
          "java.lang.String",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getSubPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTempResource",
        "parameterTypes": []
      },
      {
        "name": "getTempResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getZipTool",
        "parameterTypes": []
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isDeltaPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTenantPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTextResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidRelativeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isZipFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "newDynamicPath",
        "parameterTypes": []
      },
      {
        "name": "normalizePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "readBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readTextHeader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "registerZipTool",
        "parameterTypes": [
          "io.nop.core.resource.zip.IZipTool"
        ]
      },
      {
        "name": "removeNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePathResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativeStdPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveResource",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "startsWithNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "toCharReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "unzip",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "unzipToDir",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "writeBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "[B"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.Properties"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "zipDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "zipDirToStream",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "java.io.OutputStream",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      }
    ],
    "name": "io.nop.core.resource.ResourceHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.resource.component.AbstractComponentModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "findResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceName",
        "parameterTypes": []
      },
      {
        "name": "getResourceNameNoExt",
        "parameterTypes": []
      },
      {
        "name": "getResourcePath",
        "parameterTypes": []
      },
      {
        "name": "getResourceStdPath",
        "parameterTypes": []
      },
      {
        "name": "getSiblingResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUseCpCache",
        "parameterTypes": []
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      },
      {
        "name": "setResourcePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": []
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractTextResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.IResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.ITextResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doGetRelative",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "generateName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.AbstractFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "checkNotReadonly",
        "parameterTypes": []
      },
      {
        "name": "checkSupportStream",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.AbstractResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPath",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "doGetRelative",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getCanonicalPath",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.impl.FileResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "contentCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "dependencyManager"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "resourceLoader"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "s_loc"
      }
    ],
    "methods": [
      {
        "name": "autoFormat",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "buildLoop",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.model.loop.INestedLoop"
        ]
      },
      {
        "name": "checkOverrideHead",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "deleteTargetResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "executeWithLoop",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "forceOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLoader",
        "parameterTypes": []
      },
      {
        "name": "getResourceChildren",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": []
      },
      {
        "name": "getTargetResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTargetResourceLoader",
        "parameterTypes": []
      },
      {
        "name": "getTargetRootPath",
        "parameterTypes": []
      },
      {
        "name": "getTplResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTplResourceLoader",
        "parameterTypes": []
      },
      {
        "name": "getTplRootPath",
        "parameterTypes": []
      },
      {
        "name": "isAllowWrite",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "isAutoFormat",
        "parameterTypes": []
      },
      {
        "name": "isCheckOverrideHead",
        "parameterTypes": []
      },
      {
        "name": "isForceOverride",
        "parameterTypes": []
      },
      {
        "name": "isNotChange",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "isTargetUpToDate",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "isTextFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "isTplFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "maybeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeTargetRootDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "processDir",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.resource.IResource",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "processDirOrFile",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.resource.IResource",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "processFile",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.resource.IResource",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "processTpl",
        "parameterTypes": [
          "io.nop.core.resource.tpl.TemplateGenPath",
          "io.nop.core.resource.IResource",
          "io.nop.core.model.loop.INestedLoop",
          "io.nop.core.lang.eval.IEvalScope",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "readTextHeader",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "renderTemplate",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "resourceLoader",
        "parameterTypes": [
          "io.nop.core.resource.IResourceLoader"
        ]
      },
      {
        "name": "shouldIgnoreTpl",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "shouldKeepEmptyTargetFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "targetResourceLoader",
        "parameterTypes": [
          "io.nop.core.resource.IResourceLoader"
        ]
      },
      {
        "name": "tplResourceLoader",
        "parameterTypes": [
          "io.nop.core.resource.IResourceLoader"
        ]
      },
      {
        "name": "withContentCache",
        "parameterTypes": []
      },
      {
        "name": "withContentCache",
        "parameterTypes": [
          "io.nop.core.resource.cache.IResourceContentCache"
        ]
      },
      {
        "name": "withDependencyManager",
        "parameterTypes": []
      },
      {
        "name": "withDependencyManager",
        "parameterTypes": [
          "io.nop.core.resource.component.IResourceDependencyManager"
        ]
      },
      {
        "name": "withDependsCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.tpl.TemplateFileGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDialectSelector",
        "parameterTypes": [
          "io.nop.dao.dialect.DialectSelector"
        ]
      },
      {
        "name": "clearDialectSelectors",
        "parameterTypes": []
      },
      {
        "name": "getDialect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDialectForConnection",
        "parameterTypes": [
          "java.sql.Connection"
        ]
      },
      {
        "name": "getDialectForDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "getDialectName",
        "parameterTypes": [
          "java.sql.Connection"
        ]
      },
      {
        "name": "getDialectSelectors",
        "parameterTypes": []
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "loadDialectSelectors",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.DialectManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compare",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compare",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.dao.dialect.DialectSelector"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDialectName",
        "parameterTypes": []
      },
      {
        "name": "getDriverMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverName",
        "parameterTypes": []
      },
      {
        "name": "getPdmTargetType",
        "parameterTypes": []
      },
      {
        "name": "getProductName",
        "parameterTypes": []
      },
      {
        "name": "getProductVersion",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "setDialectName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDriverMajorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverMinorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPdmTargetType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.DialectSelector",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGeometryDataParameterBinder",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcGetString",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.IDialect",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildFunctionSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getExceptKeyword",
        "parameterTypes": []
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGeometryDataParameterBinder",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "initDataTypes",
        "parameterTypes": []
      },
      {
        "name": "initFunctions",
        "parameterTypes": []
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcGetString",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.impl.DialectImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "fromLiteral",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int"
        ]
      },
      {
        "name": "isJavaType",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "toLiteral",
        "parameterTypes": [
          "java.lang.Object",
          "io.nop.dao.dialect.IDialect"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.DefaultJsonTypeHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.MySqlJsonTypeHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.PostgreSqlJsonTypeHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.loader.DialectModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectDiscoverySqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectErrorCodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectFeatures",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectSqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCodeOrName",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlDataTypeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlNativeFunctionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlTemplateModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSelectCatalogs",
        "parameterTypes": []
      },
      {
        "name": "getSelectConstaints",
        "parameterTypes": []
      },
      {
        "name": "getSelectIndexes",
        "parameterTypes": []
      },
      {
        "name": "getSelectPrimaryKeys",
        "parameterTypes": []
      },
      {
        "name": "getSelectSchemas",
        "parameterTypes": []
      },
      {
        "name": "getSelectSequences",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTables",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViews",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSelectCatalogs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectConstaints",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectIndexes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectPrimaryKeys",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSchemas",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSequences",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTables",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViews",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectDiscoverySqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUseSqlState",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseSqlState",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValues",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectErrorCodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportFullJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportILike",
        "parameterTypes": []
      },
      {
        "name": "getSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "getSupportNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "getSupportRightJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "getSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "getSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "getSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "getSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "getSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "getUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSupportBatchUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportBatchUpdateCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportExecuteLargeUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportFullJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportILike",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportLargeMaxRows",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportQueryTimeout",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportRightJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportRowValueConstructor",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSavePoint",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSequence",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSomeSubQuery",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTransaction",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTruncateTable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportWithAsClause",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseGetStringForDate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectFeatures",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addErrorCode",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "addSqlDataType",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllSchemaPattern",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getDbProductNames",
        "parameterTypes": []
      },
      {
        "name": "getDefaultNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getDiscoverySqls",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "getFeatures",
        "parameterTypes": []
      },
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getGeometryParameterBinder",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrlPattern",
        "parameterTypes": []
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getKeywordUnderscore",
        "parameterTypes": []
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getRename",
        "parameterTypes": []
      },
      {
        "name": "getReservedKeywords",
        "parameterTypes": []
      },
      {
        "name": "getSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "getSqlExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSqls",
        "parameterTypes": []
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getUpsertHandler",
        "parameterTypes": []
      },
      {
        "name": "hasErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "hasFunctions",
        "parameterTypes": []
      },
      {
        "name": "hasRename",
        "parameterTypes": []
      },
      {
        "name": "hasSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "keySet_errorCodes",
        "parameterTypes": []
      },
      {
        "name": "keySet_functions",
        "parameterTypes": []
      },
      {
        "name": "keySet_sqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllSchemaPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setDbProductNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDiscoverySqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorCodes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFeatures",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "setFunctions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGeometryParameterBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGeometryTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrlPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJsonTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeywordQuote",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setKeywordUnderscore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxBytesSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxStringSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPaginationHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRename",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setReservedKeywords",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSqlDataTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqlExceptionTranslator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "setTableNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setUpsertHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCreateSequence",
        "parameterTypes": []
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDropSequence",
        "parameterTypes": []
      },
      {
        "name": "getDropTable",
        "parameterTypes": []
      },
      {
        "name": "getEscapeSlash",
        "parameterTypes": []
      },
      {
        "name": "getExceptKeyword",
        "parameterTypes": []
      },
      {
        "name": "getFalseString",
        "parameterTypes": []
      },
      {
        "name": "getForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getInsertKeyword",
        "parameterTypes": []
      },
      {
        "name": "getLockHint",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDual",
        "parameterTypes": []
      },
      {
        "name": "getSequenceNextVal",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTrueString",
        "parameterTypes": []
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValidationQuery",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCreateSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEscapeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExceptKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFalseString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectFromDual",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSequenceNextVal",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrueString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectSqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBinder",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isAllowExceedPrecision",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAllowExceedPrecision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowPrecision",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlDataTypeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlNativeFunctionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getHasParenthesis",
        "parameterTypes": []
      },
      {
        "name": "getMaxArgCount",
        "parameterTypes": []
      },
      {
        "name": "getMinArgCount",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRealName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSpecial",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isOnlyForWindowExpr",
        "parameterTypes": []
      },
      {
        "name": "isReturnFirstArgType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasParenthesis",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyForWindowExpr",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRealName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnFirstArgType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setSpecial",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlNativeFunctionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlTemplateModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isOnlyForWindowExpr",
        "parameterTypes": []
      },
      {
        "name": "isReturnFirstArgType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyForWindowExpr",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnFirstArgType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlTemplateModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.AbstractPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.IPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.LimitOffsetPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.OffsetFetchPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.initialize.DaoDialectInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFieldLabel",
        "parameterTypes": []
      },
      {
        "name": "getFieldModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldNameMap",
        "parameterTypes": []
      },
      {
        "name": "getPropOrName",
        "parameterTypes": []
      },
      {
        "name": "getResultComponentType",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toNameMap",
        "parameterTypes": [
          "java.util.List",
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model.ImportFieldModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.imp.model.ImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFieldLabel",
        "parameterTypes": []
      },
      {
        "name": "getFieldModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldNameMap",
        "parameterTypes": []
      },
      {
        "name": "getResultComponentType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "matchNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model.ImportSheetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getDisplayMode",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExportExpr",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldDecider",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getGroupField",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNormalizeFieldsExpr",
        "parameterTypes": []
      },
      {
        "name": "getParentProp",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getStripText",
        "parameterTypes": []
      },
      {
        "name": "getTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownField",
        "parameterTypes": []
      },
      {
        "name": "getValueExpr",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFields",
        "parameterTypes": []
      },
      {
        "name": "isComputed",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreWhenEmpty",
        "parameterTypes": []
      },
      {
        "name": "isList",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isVirtual",
        "parameterTypes": []
      },
      {
        "name": "keySet_fields",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setComputed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExportExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFieldDecider",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreWhenEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setList",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalizeFieldsExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setParentProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setStripText",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "setValueExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setVirtual",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportFieldModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addSheet",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportSheetModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfterParse",
        "parameterTypes": []
      },
      {
        "name": "getBeforeParse",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "getSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSheets",
        "parameterTypes": []
      },
      {
        "name": "getTemplatePath",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getXdef",
        "parameterTypes": []
      },
      {
        "name": "hasSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSheets",
        "parameterTypes": []
      },
      {
        "name": "isDefaultStripText",
        "parameterTypes": []
      },
      {
        "name": "isDump",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreUnknownSheet",
        "parameterTypes": []
      },
      {
        "name": "keySet_sheets",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAfterParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeforeParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDefaultStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDump",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnoreUnknownSheet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResultType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setSheets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTemplatePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      },
      {
        "name": "setXdef",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportSheetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfterParse",
        "parameterTypes": []
      },
      {
        "name": "getBeforeParse",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayMode",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldDecider",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNamePattern",
        "parameterTypes": []
      },
      {
        "name": "getNormalizeFieldsExpr",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "getSheetNameProp",
        "parameterTypes": []
      },
      {
        "name": "getSheetVarName",
        "parameterTypes": []
      },
      {
        "name": "getUnknownField",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFields",
        "parameterTypes": []
      },
      {
        "name": "isIgnore",
        "parameterTypes": []
      },
      {
        "name": "isList",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isMultiple",
        "parameterTypes": []
      },
      {
        "name": "isMultipleAsMap",
        "parameterTypes": []
      },
      {
        "name": "keySet_fields",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAfterParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeforeParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldDecider",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIgnore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setList",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultipleAsMap",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalizeFieldsExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setResultType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setSheetNameProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSheetVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportSheetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.initializer.ExcelCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.graphql.core.initialize.GraphQLCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.log.java.JavaLoggerConfiguratorInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportModel",
        "parameterTypes": []
      },
      {
        "name": "isReturnDynamicObject",
        "parameterTypes": []
      },
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "setReturnDynamicObject",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ooxml.xlsx.imp.XlsxBeanParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportModel",
        "parameterTypes": []
      },
      {
        "name": "isReturnDynamicObject",
        "parameterTypes": []
      },
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "setImportModel",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportModel"
        ]
      },
      {
        "name": "setReturnDynamicObject",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ooxml.xlsx.imp.XlsxObjectLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.IColumnModel"
        ]
      },
      {
        "name": "addTenantIdForTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "boolean"
        ]
      },
      {
        "name": "addTenantIdForTables",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "addTenantIdToPrimaryKey",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "createTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "createTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "boolean"
        ]
      },
      {
        "name": "createTables",
        "parameterTypes": [
          "java.util.Collection",
          "boolean"
        ]
      },
      {
        "name": "createTables",
        "parameterTypes": [
          "java.util.Collection",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "dropColumn",
        "parameterTypes": [
          "io.nop.orm.model.IColumnModel"
        ]
      },
      {
        "name": "dropTable",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "boolean"
        ]
      },
      {
        "name": "dropTables",
        "parameterTypes": [
          "java.util.Collection",
          "boolean"
        ]
      },
      {
        "name": "forDialect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDmlLibPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "modifyColumn",
        "parameterTypes": [
          "io.nop.orm.model.IColumnModel",
          "io.nop.orm.model.IColumnModel"
        ]
      }
    ],
    "name": "io.nop.orm.ddl.DdlSqlCreator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.initialize.OrmCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "containsTenantIdInPk",
        "parameterTypes": []
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionProp",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNopFlowIdPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "hasOneToOneRelation",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isGlobalUniqueId",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isTableView",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model.IEntityPropModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isJoinOnNonPkColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityRelationModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IOrmDataType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IPdmElement",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getSqlType",
        "parameterTypes": []
      },
      {
        "name": "getSqlType",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumnRefs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "setSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmDomainModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "containsTenantIdInPk",
        "parameterTypes": []
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getNopFlowIdPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "hasOneToOneRelation",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAllColumnPrimary",
        "parameterTypes": []
      },
      {
        "name": "isGlobalUniqueId",
        "parameterTypes": []
      },
      {
        "name": "setPkColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRevLatestKeyColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColumnCode",
        "parameterTypes": []
      },
      {
        "name": "getColumnModel",
        "parameterTypes": []
      },
      {
        "name": "setColumnModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmIndexColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmIndexModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLeftPropModel",
        "parameterTypes": []
      },
      {
        "name": "getLeftType",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getRightPropModel",
        "parameterTypes": []
      },
      {
        "name": "getRightType",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "setLeftPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "setRightPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmJoinOnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModelByTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModelByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModels",
        "parameterTypes": []
      },
      {
        "name": "getEntityModelsInTopoOrder",
        "parameterTypes": []
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getTopoEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAnyEntityUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isMerged",
        "parameterTypes": []
      },
      {
        "name": "setMerged",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmRefSetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addJoinOn",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isJoinOnNonPkColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDynamicRelation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJoinOnNonPkColumn",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "setRefEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setRefPropIds",
        "parameterTypes": [
          "[I"
        ]
      },
      {
        "name": "setSingleColumnJoin",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "setCollectionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToManyReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "setOneToOne",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToOneReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getFixedValue",
        "parameterTypes": []
      },
      {
        "name": "getJsonPath",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeSqlType",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getUiHint",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isLazy",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFixedValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJsonPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNativeSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUiHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmDomainModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.orm.model.OrmAliasModel"
        ]
      },
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "addComponent",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentModel"
        ]
      },
      {
        "name": "addCompute",
        "parameterTypes": [
          "io.nop.orm.model.OrmComputePropModel"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityFilterModel"
        ]
      },
      {
        "name": "addIndex",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexModel"
        ]
      },
      {
        "name": "addRelation",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "addUniqueKey",
        "parameterTypes": [
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getCreaterProp",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbPkName",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionProp",
        "parameterTypes": []
      },
      {
        "name": "getDimensionalType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "getIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getLabelProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getShardProp",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStateProp",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTenantProp",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterProp",
        "parameterTypes": []
      },
      {
        "name": "getVersionProp",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasColumns",
        "parameterTypes": []
      },
      {
        "name": "hasComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComponents",
        "parameterTypes": []
      },
      {
        "name": "hasCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComputes",
        "parameterTypes": []
      },
      {
        "name": "hasFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFilters",
        "parameterTypes": []
      },
      {
        "name": "hasIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIndexes",
        "parameterTypes": []
      },
      {
        "name": "hasRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRelations",
        "parameterTypes": []
      },
      {
        "name": "hasUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isTableView",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isUseWorkflow",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_columns",
        "parameterTypes": []
      },
      {
        "name": "keySet_components",
        "parameterTypes": []
      },
      {
        "name": "keySet_computes",
        "parameterTypes": []
      },
      {
        "name": "keySet_filters",
        "parameterTypes": []
      },
      {
        "name": "keySet_indexes",
        "parameterTypes": []
      },
      {
        "name": "keySet_relations",
        "parameterTypes": []
      },
      {
        "name": "keySet_uniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCheckVersionWhenLazyLoad",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComponents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComputes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCreateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbPkName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteFlagProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimensionalType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityModeEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIndexes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKvTable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShortName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setShardProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStateProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableView",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTenantProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueKeys",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUpdateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseRevision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseShard",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTenant",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseWorkflow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexColumnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDesc",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmIndexColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexColumnModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getIndexType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUnique",
        "parameterTypes": []
      },
      {
        "name": "hasColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasColumns",
        "parameterTypes": []
      },
      {
        "name": "keySet_columns",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndexType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnique",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmIndexModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLeftProp",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": []
      },
      {
        "name": "getRightProp",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLeftProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeftValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRightProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRightValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmJoinOnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDict",
        "parameterTypes": [
          "io.nop.api.core.beans.DictBean"
        ]
      },
      {
        "name": "addDomain",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "addEntity",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "addPackage",
        "parameterTypes": [
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDicts",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDomains",
        "parameterTypes": []
      },
      {
        "name": "getEntities",
        "parameterTypes": []
      },
      {
        "name": "getEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackages",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "hasDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDicts",
        "parameterTypes": []
      },
      {
        "name": "hasDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDomains",
        "parameterTypes": []
      },
      {
        "name": "hasEntities",
        "parameterTypes": []
      },
      {
        "name": "hasEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackages",
        "parameterTypes": []
      },
      {
        "name": "keySet_dicts",
        "parameterTypes": []
      },
      {
        "name": "keySet_domains",
        "parameterTypes": []
      },
      {
        "name": "keySet_entities",
        "parameterTypes": []
      },
      {
        "name": "keySet_packages",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDicts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEntities",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPackages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmRefSetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isEmbedded",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isQueryable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutoCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbedded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJoin",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmToManyReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToManyReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmToOneReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConstraint",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setConstraint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "setReverseDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToOneReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addJoin",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel",
          "io.nop.core.lang.xml.XNode",
          "boolean"
        ]
      },
      {
        "name": "addRelation",
        "parameterTypes": [
          "io.nop.orm.pdm.PdmModelParser$RefInfo"
        ]
      },
      {
        "name": "codeToPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectRefInfo",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getChildrenPropName",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel",
          "boolean"
        ]
      },
      {
        "name": "getColumnDomain",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getDialect",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getJoinColumn",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "getRefColDisplayName",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "getRefColPropName",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel",
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "getReferenceTable",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getShortcutTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTarget",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isAllPrimaryCol",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "matchTargetType",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeRefInfo",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "parseAllReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseColumnTag",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseColumns",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseDataType",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseDimension",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseDomains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseIndex",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseIndexes",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parseKey",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel",
          "java.lang.String"
        ]
      },
      {
        "name": "parseKeys",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "parsePackage",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parsePackages",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseRefInfo",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseRelationDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseShortcut",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.pdm.PdmElementType"
        ]
      },
      {
        "name": "parseTable",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseTables",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseView",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "parseViewReference",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseViewReferences",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "parseViews",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "removeViewsNoPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.pdm.PdmModelParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRefManyPropInfo",
        "parameterTypes": [
          "io.nop.orm.model.IEntityRelationModel"
        ]
      },
      {
        "name": "getRefMappingInfo",
        "parameterTypes": [
          "io.nop.orm.model.IEntityRelationModel"
        ]
      },
      {
        "name": "getRefOnePropInfo",
        "parameterTypes": [
          "io.nop.orm.model.IEntityRelationModel"
        ]
      }
    ],
    "name": "io.nop.orm.support.OrmManyToManyHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "_instance"
      }
    ],
    "methods": [
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "loadModelFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "parseFromVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.report.core.build.XptModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "AVERAGE",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "COUNT",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "COUNTA",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "MAX",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "MIN",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "NVL",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "PRODUCT",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "SUM",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.report.core.functions.ReportFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.core.initialize.ReportCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.core.initialize.ReportImpModelCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "addColChildren",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addRowChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "addRowChildren",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addToList",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "changeColSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "changeRowSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childCell",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "childSet",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "colChildSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "cv",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getChildSet",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "getCol",
        "parameterTypes": []
      },
      {
        "name": "getColChildren",
        "parameterTypes": []
      },
      {
        "name": "getColClosest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColDescendants",
        "parameterTypes": []
      },
      {
        "name": "getColIndex",
        "parameterTypes": []
      },
      {
        "name": "getColParent",
        "parameterTypes": []
      },
      {
        "name": "getColParentExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getColRoot",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getComputed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getCp",
        "parameterTypes": []
      },
      {
        "name": "getCr",
        "parameterTypes": []
      },
      {
        "name": "getDown",
        "parameterTypes": []
      },
      {
        "name": "getDs",
        "parameterTypes": []
      },
      {
        "name": "getDsName",
        "parameterTypes": []
      },
      {
        "name": "getEi",
        "parameterTypes": []
      },
      {
        "name": "getEv",
        "parameterTypes": []
      },
      {
        "name": "getExpandField",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getExpandField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getExpandKey",
        "parameterTypes": []
      },
      {
        "name": "getExpandType",
        "parameterTypes": []
      },
      {
        "name": "getExpandValue",
        "parameterTypes": []
      },
      {
        "name": "getExportValue",
        "parameterTypes": []
      },
      {
        "name": "getFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "getFormula",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLinkUrl",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getModel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNumberValue",
        "parameterTypes": []
      },
      {
        "name": "getRealCell",
        "parameterTypes": []
      },
      {
        "name": "getRight",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getRowChildren",
        "parameterTypes": []
      },
      {
        "name": "getRowClosest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRowDescendants",
        "parameterTypes": []
      },
      {
        "name": "getRowIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowParent",
        "parameterTypes": []
      },
      {
        "name": "getRowParentExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowRoot",
        "parameterTypes": []
      },
      {
        "name": "getRp",
        "parameterTypes": []
      },
      {
        "name": "getRr",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "hasColDescendant",
        "parameterTypes": []
      },
      {
        "name": "hasRowDescendant",
        "parameterTypes": []
      },
      {
        "name": "isColDescendantOf",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "isColParentExpandable",
        "parameterTypes": []
      },
      {
        "name": "isEvaluated",
        "parameterTypes": []
      },
      {
        "name": "isExpandable",
        "parameterTypes": []
      },
      {
        "name": "isExpanded",
        "parameterTypes": []
      },
      {
        "name": "isExportFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "isProxyCell",
        "parameterTypes": []
      },
      {
        "name": "isRemoved",
        "parameterTypes": []
      },
      {
        "name": "isRowDescendantOf",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "isRowParentExpandable",
        "parameterTypes": []
      },
      {
        "name": "isStaticCell",
        "parameterTypes": []
      },
      {
        "name": "markEvaluated",
        "parameterTypes": []
      },
      {
        "name": "markProxy",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "removeFromList",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "removeRowChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "rowChildSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCol",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCol"
        ]
      },
      {
        "name": "setColDescendants",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setColParent",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDown",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setEvaluated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpandIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setExpandValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFormattedValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFormula",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLinkUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "io.nop.excel.model.XptCellModel"
        ]
      },
      {
        "name": "setRealCell",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setRemoved",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRight",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedRow"
        ]
      },
      {
        "name": "setRowDescendants",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRowParent",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.report.core.model.ExpandedCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.rpc.model.proto.ProtoFileParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "html"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "node"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "none"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "sql"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "text"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "textMap"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xjson"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xml"
      }
    ],
    "methods": [
      {
        "name": "fromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowTextOut",
        "parameterTypes": []
      },
      {
        "name": "isXmlOrHtml",
        "parameterTypes": []
      },
      {
        "name": "requireFromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.XLangOutputMode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.debugger.initialize.XLangDebuggerInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "AND",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "IF",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "OR",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "SWITCH",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "assign",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "currentDateTime",
        "parameterTypes": []
      },
      {
        "name": "eval",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalAction",
          "java.util.Map"
        ]
      },
      {
        "name": "eval_node",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "functional",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "g_current_locale",
        "parameterTypes": []
      },
      {
        "name": "g_default_locale",
        "parameterTypes": []
      },
      {
        "name": "g_make_node",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getByPropPath",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "inject",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.Object"
        ]
      },
      {
        "name": "jpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "location",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "masked",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "optional",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "order_by",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "raw",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selection",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "sql",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval2",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "today",
        "parameterTypes": []
      },
      {
        "name": "tpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "track",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.GlobalFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "logDebug",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logInfo",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logTrace",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logWarn",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.LogFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.RegisterModelCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangDebuggerInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "reparse",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "v",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.xlang.utils.DebugHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "debug",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "error",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "info",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "trace",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "warn",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "io.nop.xlang.utils.LogHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.AbstractDslModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "g_excelModelLoaderClass"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "g_excelModelLoaderFactory"
      }
    ],
    "methods": [
      {
        "name": "dslJsonListToNodeList",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema",
          "java.util.List"
        ]
      },
      {
        "name": "dslJsonToNode",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema",
          "java.lang.Object"
        ]
      },
      {
        "name": "dslModelToXNode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "dslNodeToJson",
        "parameterTypes": [
          "io.nop.xlang.xdef.IXDefNode",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getXdefPath",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDslModel",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "loadDslModelAsJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      },
      {
        "name": "newExcelModelLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseDslModelNode",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "registerExcelModelLoaderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "registerExcelModelLoaderFactory",
        "parameterTypes": [
          "io.nop.xlang.xdsl.IExcelModelLoaderFactory"
        ]
      },
      {
        "name": "saveDslModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "supportExcelModelLoader",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xdsl.DslModelHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.IXDslModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IListSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IMapSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isInterface",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.IObjSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRefResolved",
        "parameterTypes": []
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchemaNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISimpleSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IUnionSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "transform",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjMetaToXDef",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getInterface",
        "parameterTypes": []
      },
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeMax",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExcludeMin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExplicitDefine",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExtendsType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setImplementsTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItemSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapValueSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMaxItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMinItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMultipleOf",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOneOf",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSubTypeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportExtends",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setUnknownTagSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaNodeImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.SchemaNodeImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefResolved",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._SchemaNodeImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "baseLoc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "packageName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "typeAliases"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "typeCache"
      }
    ],
    "methods": [
      {
        "name": "addTypeAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "buildClassType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "java.lang.String"
        ]
      },
      {
        "name": "buildLoc",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable"
        ]
      },
      {
        "name": "buildReferenceType",
        "parameterTypes": [
          "org.codehaus.janino.Java$ReferenceType"
        ]
      },
      {
        "name": "buildType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Type"
        ]
      },
      {
        "name": "buildTypes",
        "parameterTypes": [
          "[Lorg.codehaus.janino.Java$Type;"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotation",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotatable",
          "java.lang.String"
        ]
      },
      {
        "name": "parseAnnotationValue",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotation",
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "resolveAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Located",
          "java.lang.String"
        ]
      },
      {
        "name": "setRawTypeResolver",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JaninoParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildTypeReference",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "resolveRef",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JavaObjMetaParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.impl.XplTaskLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.HtmlXplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.NoneXplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.loader.XplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFunctionModel",
        "parameterTypes": []
      },
      {
        "name": "getTagCompiler",
        "parameterTypes": []
      },
      {
        "name": "getTagFuncName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setTagCompiler",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplLibTagCompiler"
        ]
      },
      {
        "name": "setTagFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTag",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultNamespace",
        "parameterTypes": []
      },
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setDefaultNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagLib",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSlotFuncName",
        "parameterTypes": []
      },
      {
        "name": "setSlotFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlot",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlotArg",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "addSlot",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTag"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getBodyType",
        "parameterTypes": []
      },
      {
        "name": "getCallLocationVar",
        "parameterTypes": []
      },
      {
        "name": "getCheckNs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExample",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSlots",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagReturn",
        "parameterTypes": []
      },
      {
        "name": "getTransformer",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "hasSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSlots",
        "parameterTypes": []
      },
      {
        "name": "isConditionTag",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isDump",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreUnknownAttrs",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "keySet_slots",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBodyType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setCallLocationVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setConditionTag",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDump",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExample",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setIgnoreUnknownAttrs",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagReturn",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagReturn"
        ]
      },
      {
        "name": "setTransformer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTag",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOptional",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagLib"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "hasTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasTags",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagLib",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlotType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isMultiple",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlotType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlot",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlotArg",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.io.Serializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "booleanValue",
        "parameterTypes": []
      },
      {
        "name": "compare",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "logicalAnd",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalOr",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalXor",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "parseBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Boolean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "java.lang.Comparable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Enum"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "ordinal",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Enum",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Iterable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Object",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CASE_INSENSITIVE_ORDER"
      }
    ],
    "methods": [
      {
        "name": "charAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "chars",
        "parameterTypes": []
      },
      {
        "name": "codePointAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointBefore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointCount",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "codePoints",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "compareToIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.StringBuffer"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "endsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equalsIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.util.Locale",
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "formatted",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": []
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "int",
          "int",
          "[B",
          "int"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getChars",
        "parameterTypes": [
          "int",
          "int",
          "[C",
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "intern",
        "parameterTypes": []
      },
      {
        "name": "isBlank",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[Ljava.lang.CharSequence;"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "lines",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "offsetByCodePoints",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "boolean",
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "repeat",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "char",
          "char"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFirst",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveConstantDesc",
        "parameterTypes": [
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "splitWithDelimiters",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "strip",
        "parameterTypes": []
      },
      {
        "name": "stripIndent",
        "parameterTypes": []
      },
      {
        "name": "stripLeading",
        "parameterTypes": []
      },
      {
        "name": "stripTrailing",
        "parameterTypes": []
      },
      {
        "name": "subSequence",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toCharArray",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "translateEscapes",
        "parameterTypes": []
      },
      {
        "name": "trim",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "java.lang.String",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "describeConstable",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.constant.Constable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractCollection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "java.util.AbstractList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "java.util.AbstractSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "addFirst",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addLast",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ensureCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeFirst",
        "parameterTypes": []
      },
      {
        "name": "removeIf",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeLast",
        "parameterTypes": []
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.UnaryOperator"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "trimToSize",
        "parameterTypes": []
      }
    ],
    "name": "java.util.ArrayList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Collection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "compute",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "computeIfAbsent",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "computeIfPresent",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrDefault",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "newHashMap",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "putIfAbsent",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.HashMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "newHashSet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.HashSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrDefault",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "newLinkedHashMap",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "putFirst",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putLast",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "reversed",
        "parameterTypes": []
      },
      {
        "name": "sequencedEntrySet",
        "parameterTypes": []
      },
      {
        "name": "sequencedKeySet",
        "parameterTypes": []
      },
      {
        "name": "sequencedValues",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFirst",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addLast",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "removeFirst",
        "parameterTypes": []
      },
      {
        "name": "removeLast",
        "parameterTypes": []
      },
      {
        "name": "reversed",
        "parameterTypes": []
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.LinkedHashMap$LinkedValues",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFirst",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addLast",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "newLinkedHashSet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeFirst",
        "parameterTypes": []
      },
      {
        "name": "removeLast",
        "parameterTypes": []
      },
      {
        "name": "reversed",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.List",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "entry",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "ofEntries",
        "parameterTypes": [
          "[Ljava.util.Map$Entry;"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.Map",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "reversed",
        "parameterTypes": []
      }
    ],
    "name": "java.util.SequencedCollection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Set",
    "unsafeAllocated": false
  }
]