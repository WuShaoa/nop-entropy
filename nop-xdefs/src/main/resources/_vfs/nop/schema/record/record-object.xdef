<!--
@ref 引用types段中定义的类型
-->
<object x:schema="/nop/schema/xdef.xdef"
        xmlns:x="/nop/schema/xdsl.xdef"
        xmlns:xdef="/nop/schema/xdef.xdef"
        xdef:name="RecordObjectMeta" xdef:bean-package="io.nop.record.model"
        beanClass="class-name" ref="string" baseType="class-name">

    <doc xdef:value="string"/>

    <params xdef:body-type="list" xdef:key-attr="name">
        <param name="!string" xdef:ref="record-param.xdef"/>
    </params>

    <fields xdef:body-type="list" xdef:key-attr="name">
        <field name="!prop-name" xdef:ref="record-field.xdef"/>
    </fields>

    <writeWhen xdef:value="xpl-fn:(record,ctx)=>boolean"/>

    <readWhen xdef:value="xpl-fn:(in,record,ctx)=>boolean"/>

    <afterWrite xdef:value="xpl-fn:(out,record,ctx)=>any"/>

    <!-- 在所有子字段都读取到之后执行 -->
    <afterRead xdef:value="xpl-fn:(in,record,ctx)=>any"/>

    <template xdef:value="string"/>

</object>