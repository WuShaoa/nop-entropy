<task x:schema="/nop/schema/task/task.xdef" xmlns:x="/nop/schema/xdsl.xdef"
      x:extends="/nop/task/lib/common.task.xml,/nop/task/lib/batch-common.task.xml"
      xmlns:task="task" x:dump="true" defaultUseParentScope="true" xmlns:xpl="xpl">

    <input name="totalCount" type="int" mandatory="true"/>
    <input name="taskKey" type="String"/>

    <steps>
        <custom name="createCard" customType="batch:Execute" batch:asyncExec="true"
                xmlns:batch="/nop/batch/xlib/batch.xlib">
            <batch:task taskName="demo.createCard" batchSize="100" concurrency="20" saveState="true" useBatchRequestGenerator="true">
                <taskKeyExpr>taskKey</taskKeyExpr>

                <loader>
                    <generator genModelPath="create-card.batch-gen.xlsx" totalCountExpr="totalCount"/>
                </loader>

                <processor name="callCreateCardTask">
                    <source>
                        <task:Execute taskName="demo/create-card" inputs="${{request:item,consume}}"
                                      xpl:lib="/nop/task/xlib/task.xlib" xpl:return="outputs"/>

                        <batch:Consume item="${outputs.card}"/>
                    </source>
                </processor>

                <!-- processor中调用ORM保存实体，这里不需要额外配置consumer -->

            </batch:task>
        </custom>

        <custom name="generateTransaction" customType="batch:Execute" batch:asyncExec="true"
                xmlns:batch="/nop/batch/xlib/batch.xlib">
            <batch:task taskName="demo.generateTransaction" batchSize="100">
                <loader>
                    <orm-reader entityName="DemoCard">
                        <query>
                            <!--                            <filter>-->
                            <!--                                <endsWith name="cardNumber" value="${1}"/>-->
                            <!--                            </filter>-->

                            <orderBy>
                                <field name="cardId" desc="false"/>
                            </orderBy>
                        </query>
                    </orm-reader>
                </loader>

                <processor name="generate">
                    <source><![CDATA[
                        for(let i=0;i<10;i++){
                           consume({cardNumber: item.cardNumber, txnType: 'T', txnAmount: i, txnTime: currentDateTime()});
                        }
                    ]]></source>
                </processor>

                <consumer name="export">
                    <file-writer filePath="dev:/target/txn-${taskKey}.dat" fileModelPath="txn.record-file.xlsx"/>
                </consumer>
            </batch:task>
        </custom>

        <custom name="generateReport" customType="xpt:GenReport" xmlns:xpt="/nop/report/xlib/xpt.xlib"
                xpt:template="demo-card.xpt.xlsx" xpt:outputFile="target/test-report.result.xlsx"
                xpt:args="${{
                    title: 'TEST REPORT'
                }}"
        />
    </steps>
</task>