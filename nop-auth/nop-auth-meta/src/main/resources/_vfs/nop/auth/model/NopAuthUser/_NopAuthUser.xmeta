<?xml version="1.0" encoding="UTF-8" ?>
<meta x:schema="/nop/schema/xmeta.xdef" xmlns:x="/nop/schema/xdsl.xdef" xmlns:i18n-en="i18n-en" xmlns:ext="ext"
      xmlns:xpl="xpl" ext:model="orm" xmlns:c="c" xmlns:graphql="graphql" xmlns:meta-gen="meta-gen" xmlns:biz="biz"
      displayName="用户" i18n-en:displayName="User" tagSet="mapper,no-tenant" xmlns:ui="ui" xmlns:orm="orm">

    <entityName>io.nop.auth.dao.entity.NopAuthUser</entityName>

    <primaryKey>userId</primaryKey>

    <displayProp>userName</displayProp>

    <x:gen-extends>
        <meta-gen:DefaultMetaGenExtends xpl:lib="/nop/core/xlib/meta-gen.xlib"/>
    </x:gen-extends>

    <x:post-extends>
        <meta-gen:DefaultMetaPostExtends xpl:lib="/nop/core/xlib/meta-gen.xlib"/>
    </x:post-extends>

    <keys>
        <key name="userNameKey" props="userName"/>
    </keys>

    <props>
        <prop name="userId" displayName="用户ID" propId="1" i18n-en:displayName="User ID" tagSet="seq" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="false" internal="true" ui:show="X">
            <schema domain="userId" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="userName" displayName="用户名" propId="2" i18n-en:displayName="User Name" tagSet="disp"
              mandatory="true" queryable="true" sortable="true" insertable="true" updatable="false" ui:show="C">
            <schema domain="userName" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="password" displayName="密码" propId="3" i18n-en:displayName="Password" tagSet="masked,var,not-pub"
              mandatory="true" published="false" queryable="true" sortable="true" insertable="true" updatable="true"
              internal="true" ui:show="X">
            <schema type="java.lang.String" precision="80"/>
        </prop>
        <prop name="salt" displayName="密码加盐" propId="4" i18n-en:displayName="Salt" tagSet="var,not-pub"
              published="false" queryable="true" sortable="true" insertable="true" updatable="true" internal="true"
              ui:show="X">
            <schema type="java.lang.String" precision="32"/>
        </prop>
        <prop name="nickName" displayName="昵称" propId="5" i18n-en:displayName="Nick Name" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.String" precision="50"/>
        </prop>
        <prop name="deptId" displayName="所属部门" propId="6" i18n-en:displayName="Department" queryable="true"
              sortable="true" insertable="true" updatable="true" ext:relation="dept">
            <schema domain="deptId" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="openId" displayName="用户外部标识" propId="7" i18n-en:displayName="OpenId" tagSet="var" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="true" ui:show="L">
            <schema type="java.lang.String" precision="32"/>
        </prop>
        <prop name="relDeptId" displayName="相关部门" propId="8" i18n-en:displayName="Related Department" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L" ext:relation="relatedDept">
            <schema domain="deptId" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="gender" displayName="性别" propId="9" i18n-en:displayName="Gender" mandatory="true" queryable="true"
              sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.Integer" dict="auth/gender"/>
        </prop>
        <prop name="avatar" displayName="头像" propId="10" i18n-en:displayName="Avatar" queryable="true" sortable="true"
              insertable="true" updatable="true" internal="true" ui:show="X">
            <schema stdDomain="file" domain="image" type="java.lang.String" precision="100"/>
        </prop>
        <prop name="email" displayName="邮件" propId="11" i18n-en:displayName="Email" queryable="true" sortable="true"
              insertable="true" updatable="true" ui:show="L">
            <schema domain="email" type="java.lang.String" precision="100"/>
        </prop>
        <prop name="emailVerified" displayName="邮件已验证" propId="12" i18n-en:displayName="Email Verified" queryable="true"
              sortable="true" insertable="true" updatable="true" internal="true" ui:show="X" defaultValue="0">
            <schema domain="boolFlag" type="java.lang.Byte"/>
        </prop>
        <prop name="phone" displayName="电话" propId="13" i18n-en:displayName="Phone" queryable="true" sortable="true"
              insertable="true" updatable="true">
            <schema domain="phone" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="phoneVerified" displayName="电话已验证" propId="14" i18n-en:displayName="Phone Verified" queryable="true"
              sortable="true" insertable="true" updatable="true" internal="true" ui:show="X" defaultValue="0">
            <schema domain="boolFlag" type="java.lang.Byte"/>
        </prop>
        <prop name="birthday" displayName="生日" propId="15" i18n-en:displayName="Birthday" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L">
            <schema type="java.time.LocalDate"/>
        </prop>
        <prop name="userType" displayName="用户类型" propId="16" i18n-en:displayName="User Type" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.Integer" dict="auth/user-type"/>
        </prop>
        <prop name="status" displayName="用户状态" propId="17" i18n-en:displayName="Status" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.Integer" dict="auth/user-status"/>
        </prop>
        <prop name="idType" displayName="证件类型" propId="18" i18n-en:displayName="ID Type" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L">
            <schema type="java.lang.String" precision="10"/>
        </prop>
        <prop name="idNbr" displayName="证件号" propId="19" i18n-en:displayName="ID Number" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L">
            <schema type="java.lang.String" precision="100"/>
        </prop>
        <prop name="expireAt" displayName="用户过期时间" propId="20" i18n-en:displayName="Expire At" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L">
            <schema type="java.time.LocalDateTime"/>
        </prop>
        <prop name="pwdUpdateTime" displayName="上次密码更新时间" propId="21" i18n-en:displayName="Password Update Time"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="RL">
            <schema type="java.time.LocalDateTime"/>
        </prop>
        <prop name="changePwdAtLogin" displayName="登陆后立刻修改密码" propId="22" i18n-en:displayName="Change Password At Logon"
              queryable="true" sortable="true" insertable="true" updatable="true" ui:show="L" defaultValue="0">
            <schema domain="boolFlag" type="java.lang.Byte" precision="1"/>
        </prop>
        <prop name="realName" displayName="真实姓名" propId="23" i18n-en:displayName="Real Name" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L">
            <schema type="java.lang.String" precision="50"/>
        </prop>
        <prop name="managerId" displayName="上级" propId="24" i18n-en:displayName="Manager" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L" ext:relation="manager">
            <schema type="java.lang.String" precision="50"/>
        </prop>
        <prop name="workNo" displayName="工号" propId="25" i18n-en:displayName="Work NO" queryable="true" sortable="true"
              insertable="true" updatable="true" ui:show="L">
            <schema type="java.lang.String" precision="100"/>
        </prop>
        <prop name="positionId" displayName="职务" propId="26" i18n-en:displayName="Position" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L" ext:relation="position">
            <schema type="java.lang.String" precision="32"/>
        </prop>
        <prop name="telephone" displayName="座机" propId="27" i18n-en:displayName="Telephone" queryable="true"
              sortable="true" insertable="true" updatable="true" ui:show="L">
            <schema type="java.lang.String" precision="50"/>
        </prop>
        <prop name="clientId" displayName="设备ID" propId="28" i18n-en:displayName="Client Id" queryable="true"
              sortable="true" insertable="true" updatable="true" internal="true" ui:show="X">
            <schema type="java.lang.String" precision="100"/>
        </prop>
        <prop name="delFlag" displayName="删除标识" propId="29" i18n-en:displayName="Deleted" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="true" internal="true" ui:show="X">
            <schema stdDomain="boolFlag" domain="delFlag" type="java.lang.Byte"/>
        </prop>
        <prop name="version" displayName="数据版本" propId="30" i18n-en:displayName="Version" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" internal="true" ui:show="X">
            <schema domain="version" type="java.lang.Integer"/>
        </prop>
        <prop name="tenantId" displayName="租户ID" propId="31" i18n-en:displayName="Tenant ID" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="true" internal="true" ui:show="X">
            <schema type="java.lang.String" precision="32"/>
        </prop>
        <prop name="createdBy" displayName="创建人" propId="32" i18n-en:displayName="Created By" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="L">
            <schema domain="createdBy" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="createTime" displayName="创建时间" propId="33" i18n-en:displayName="Create Time" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="L">
            <schema domain="createTime" type="java.sql.Timestamp"/>
        </prop>
        <prop name="updatedBy" displayName="修改人" propId="34" i18n-en:displayName="Updated By" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="L">
            <schema domain="updatedBy" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="updateTime" displayName="修改时间" propId="35" i18n-en:displayName="Update Time" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="L">
            <schema domain="updateTime" type="java.sql.Timestamp"/>
        </prop>
        <prop name="remark" displayName="备注" propId="36" i18n-en:displayName="Remark" queryable="true" sortable="true"
              insertable="true" updatable="true" ui:show="SL">
            <schema domain="remark" type="java.lang.String" precision="200"/>
        </prop>
        <prop name="dept" displayName="部门" i18n-en:displayName="Department" tagSet="pub,ref-pub" ext:kind="to-one"
              internal="true" queryable="true" ext:joinLeftProp="deptId" ext:joinRightProp="deptId"
              ext:joinRightDisplayProp="deptName" insertable="false" updatable="false" lazy="true">
            <schema bizObjName="NopAuthDept"/>
        </prop>
        <prop name="dept.deptName" displayName="部门" i18n-en:displayName="Department" internal="true" queryable="true"
              sortable="true" lazy="true">
            <schema type="String"/>
        </prop>
        <prop name="relatedDept" displayName="部门" i18n-en:displayName="Related Department" tagSet="pub,ref-pub"
              ext:kind="to-one" internal="true" queryable="true" ext:joinLeftProp="relDeptId" ext:joinRightProp="deptId"
              ext:joinRightDisplayProp="deptName" insertable="false" updatable="false" lazy="true">
            <schema bizObjName="NopAuthDept"/>
        </prop>
        <prop name="relatedDept.deptName" displayName="部门" i18n-en:displayName="Related Department" internal="true"
              queryable="true" sortable="true" lazy="true">
            <schema type="String"/>
        </prop>
        <prop name="position" displayName="岗位" i18n-en:displayName="Position" tagSet="pub,ref-pub" ext:kind="to-one"
              internal="true" queryable="true" ext:joinLeftProp="positionId" ext:joinRightProp="positionId"
              ext:joinRightDisplayProp="name" insertable="false" updatable="false" lazy="true">
            <schema bizObjName="NopAuthPosition"/>
        </prop>
        <prop name="position.name" displayName="岗位" i18n-en:displayName="Position" internal="true" queryable="true"
              sortable="true" lazy="true">
            <schema type="String"/>
        </prop>
        <prop name="manager" displayName="上级" i18n-en:displayName="Manager" tagSet="pub,ref-pub" ext:kind="to-one"
              internal="true" queryable="true" ext:joinLeftProp="managerId" ext:joinRightProp="userId"
              ext:joinRightDisplayProp="userName" insertable="false" updatable="false" lazy="true">
            <schema bizObjName="NopAuthUser"/>
        </prop>
        <prop name="manager.userName" displayName="上级" i18n-en:displayName="Manager" internal="true" queryable="true"
              sortable="true" lazy="true">
            <schema type="String"/>
        </prop>
        <prop name="roleMappings" displayName="角色映射" i18n-en:displayName="RoleMappings"
              tagSet="pub,cascade-delete,insertable,updatable" ext:kind="to-many" internal="true"
              ext:joinLeftProp="userId" ext:joinRightProp="userId" orm:manyToManyRefProp="roleId" insertable="true"
              updatable="true" lazy="true">
            <schema>
                <item bizObjName="NopAuthUserRole"/>
            </schema>
        </prop>
        <prop name="substitutionMappings" displayName="代理人映射" i18n-en:displayName="Substitution Mappings"
              tagSet="pub,cascade-delete" ext:kind="to-many" internal="true" ext:joinLeftProp="userId"
              ext:joinRightProp="userId" insertable="false" updatable="false" lazy="true">
            <schema>
                <item bizObjName="NopAuthUserSubstitution"/>
            </schema>
        </prop>
        <prop name="groupMappings" displayName="分组映射" i18n-en:displayName="GroupMappings"
              tagSet="pub,cascade-delete,insertable,updatable" ext:kind="to-many" internal="true"
              ext:joinLeftProp="userId" ext:joinRightProp="userId" orm:manyToManyRefProp="groupId" insertable="true"
              updatable="true" lazy="true">
            <schema>
                <item bizObjName="NopAuthGroupUser"/>
            </schema>
        </prop>
        <prop name="avatarComponentFileStatus" mapToProp="avatarComponent.fileStatus" internal="true" lazy="true">
            <schema type="io.nop.api.core.beans.file.FileStatusBean"/>
        </prop>
        <prop name="relatedRoleList" displayName="relatedRoleList" insertable="true" updatable="true"
              depends="~roleMappings" internal="true" lazy="true">
            <schema>
                <item bizObjName="NopAuthRole"/>
            </schema>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefProps(
                                entity.getRoleMappings(), "role");
                        </getter>
        </prop>
        <prop name="relatedRoleList_ids" displayName="relatedRoleList" insertable="true" updatable="true"
              graphql:labelProp="relatedRoleList_label" lazy="true" internal="true" depends="~roleMappings">
            <schema type="List&lt;String&gt;"/>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefIds(
                                entity.getRoleMappings(), "role");
                        </getter>
            <setter>
                            import io.nop.orm.support.OrmEntityHelper;
                            OrmEntityHelper.setRefIds(
                                entity.getRoleMappings(), "role",value);
                        </setter>
        </prop>
        <prop name="relatedRoleList_label" displayName="relatedRoleList" internal="true" depends="~roleMappings"
              lazy="true">
            <schema type="String"/>
            <getter>
                    import io.nop.orm.support.OrmEntityHelper;
                    return OrmEntityHelper.getLabelForRefProps(
                        entity.getRoleMappings(), "role");
                </getter>
        </prop>
        <prop name="relatedGroupList" displayName="relatedGroupList" insertable="true" updatable="true"
              depends="~groupMappings" internal="true" lazy="true">
            <schema>
                <item bizObjName="NopAuthGroup"/>
            </schema>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefProps(
                                entity.getGroupMappings(), "group");
                        </getter>
        </prop>
        <prop name="relatedGroupList_ids" displayName="relatedGroupList" insertable="true" updatable="true"
              graphql:labelProp="relatedGroupList_label" lazy="true" internal="true" depends="~groupMappings">
            <schema type="List&lt;String&gt;"/>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefIds(
                                entity.getGroupMappings(), "group");
                        </getter>
            <setter>
                            import io.nop.orm.support.OrmEntityHelper;
                            OrmEntityHelper.setRefIds(
                                entity.getGroupMappings(), "group",value);
                        </setter>
        </prop>
        <prop name="relatedGroupList_label" displayName="relatedGroupList" internal="true" depends="~groupMappings"
              lazy="true">
            <schema type="String"/>
            <getter>
                    import io.nop.orm.support.OrmEntityHelper;
                    return OrmEntityHelper.getLabelForRefProps(
                        entity.getGroupMappings(), "group");
                </getter>
        </prop>
    </props>
</meta>