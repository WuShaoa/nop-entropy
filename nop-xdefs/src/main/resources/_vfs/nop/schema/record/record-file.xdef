<?xml version="1.0" encoding="UTF-8" ?>

<!--
 定长记录文件的描述

 @binary 是否是二进制文件。如果否，则表示是文本文件
 @defaultTextEncoding 如果是文本文件，则这里指定文件的缺省语言编码。
-->
<file x:schema="/nop/schema/xdef.xdef"
      xmlns:x="/nop/schema/xdsl.xdef"
      xmlns:xdef="/nop/schema/xdef.xdef"
      xdef:name="RecordFileMeta" xdef:bean-package="io.nop.record.model"
      binary="!boolean=false" defaultTextEncoding="string=UTF-8"
      bitEndian="enum:io.nop.commons.bytes.EndianKind"
      endian="enum:io.nop.commons.bytes.EndianKind"
>
    <doc xdef:value="string"/>

    <!--
    翻译为java doc的@see注释
    -->
    <docRef xdef:value="string"/>

    <param name="!string" type="!generic-type" mandatory="!boolean=false" stdDomain="xml-name"
           xdef:unique-attr="name" xdef:name="RecordParamMeta"/>

    <!--
    每一行解析得到一个强类型的JavaBean。如果不设置，则解析为Map
    -->
    <xdef:define xdef:name="RecordObjectMeta" type="generic-type">
        <param name="!string" xdef:ref="RecordParamMeta" xdef:unique-attr="name"/>

        <fields xdef:body-type="list" xdef:key-attr="name">
            <field name="!prop-name" xdef:ref="record-field.xdef"/>
        </fields>

        <ifExpr xdef:value="xpl-fn:(record)=>boolean"/>

        <afterWrite xdef:value="xpl-fn:(record)=>any"/>

        <!-- 在所有子字段都读取到之后执行 -->
        <afterRead xdef:value="xpl-fn:(record)=>any"/>

        <template xdef:value="string"/>

    </xdef:define>

    <header xdef:ref="RecordObjectMeta"/>

    <body xdef:name="RecordFileBodyMeta" repeatKind="enum:io.nop.record.model.FieldRepeatKind"
          xdef:ref="RecordObjectMeta">

        <!--
        返回body行的循环次数
        -->
        <repeatExpr xdef:value="xpl-fn:(record)=>int"/>

        <!--
        返回body行循环的终止条件
        -->
        <repeatUntil xdef:value="xpl-fn:(record)=>boolean"/>
    </body>

    <!--
    分页生成，每页包含指定条目数，并且有可能会具有页头和页尾
    @pageSize 分页条目数
    -->
    <pagination pageSize="!int" xdef:name="RecordPaginationMeta">
        <pageHeader xdef:ref="RecordObjectMeta"/>
        <pageFooter xdef:ref="RecordObjectMeta"/>

        <aggregates xdef:body-type="list" xdef:key-attr="name">
            <aggregate name="!prop-name" aggFunc="var-name" xdef:name="RecordAggregateFieldMeta"
                       prop="string">
                <valueExpr xdef:value="xpl-fn:(record)=>any"/>
            </aggregate>
        </aggregates>
    </pagination>

    <aggregates xdef:body-type="list" xdef:key-attr="name">
        <aggregate name="!prop-name" xdef:ref="RecordAggregateFieldMeta"/>
    </aggregates>

    <trailer xdef:ref="RecordObjectMeta"/>

    <types xdef:body-type="list" xdef:key-attr="name">
        <type name="!prop-name" xdef:ref="RecordObjectMeta" xdef:name="RecordTypeMeta"/>
    </types>

    <enums xdef:body-type="list" xdef:key-attr="name">
        <enum name="!var-name" valueType="std-data-type" xdef:name="RecordEnum">
            <doc xdef:value="string"/>
            <option value="!string" label="!string" xdef:unique-attr="value" xdef:name="RecordEnumOption">
                <doc xdef:value="string"/>
                <!--
                翻译为java doc的@see注释
                -->
                <docRef xdef:value="string"/>
            </option>
        </enum>
    </enums>
</file>