[
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_BAD_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_FAIL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_FORBIDDEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_NOT_FOUND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_OK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_TIMEOUT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_UNAUTHORIZED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARG_KEY_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARG_ORDER_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ATTR_SERVICE_CONTEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_ALL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_DELETE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_READ"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_WRITE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_JSON_IGNORE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_READABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_WRITABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_PROTOTYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_SINGLETON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_CONTAINER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_VALUE_NONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DIRECTIVE_PROP_META"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_STRING_ARRAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENCODED_PARAM_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_BIZ_FATAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_ERROR_CODE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_MSG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_STATUS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ACCESS_TOKEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ACTOR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_APP_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_APP_ZONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_BIZ_FAIL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_BIZ_KEY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_CLIENT_ADDR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_CONTENT_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_COOKIE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_DEVICE_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_HOST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_LOCALE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ONE_WAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_REL_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SHARD"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_ACTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_GROUP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_ROUTE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TASK_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TENANT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TIMEOUT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TIMEZONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TRACE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_BRANCH_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_BRANCH_NO"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_GROUP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_USER_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_VERSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HTTP_HEADER_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_API_CONTEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_AUTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_CACHE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_FLOW_CONTROL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_SINGLE_SESSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_TCC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_TRANSACTIONAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_SESSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_TENANT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_TRACE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_USER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "META_KEY_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NO_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_ENTITY_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_FIELD_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_PROP_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_TARGET_HOST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SYS_PARAM_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TEMP_HEADER_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_BODY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_LOC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "YES_VALUE"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.ApiConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "copyHeaders",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": []
      },
      {
        "name": "getSelectedHeaders",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiMessage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "build",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBooleanProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getStringProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "buildSuccess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getErrors",
        "parameterTypes": []
      },
      {
        "name": "getHttpStatus",
        "parameterTypes": []
      },
      {
        "name": "getMsg",
        "parameterTypes": []
      },
      {
        "name": "getMsgTimeout",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTryResponse",
        "parameterTypes": []
      },
      {
        "name": "isBizSuccess",
        "parameterTypes": []
      },
      {
        "name": "isHttp2XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp3XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp4XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp5XX",
        "parameterTypes": []
      },
      {
        "name": "isOk",
        "parameterTypes": []
      },
      {
        "name": "isWrapper",
        "parameterTypes": []
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "setErrors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHttpStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMsgTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTryResponse",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setWrapper",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiResponse",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "attrs",
        "parameterTypes": []
      },
      {
        "name": "containsLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLabelByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOptionByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOptionByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOptionCount",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getValueByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueType",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isNormalized",
        "parameterTypes": []
      },
      {
        "name": "isStatic",
        "parameterTypes": []
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalized",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictOptionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DEFAULT_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HIDDEN_SELECTION"
      }
    ],
    "methods": [
      {
        "name": "_flatten",
        "parameterTypes": [
          "java.util.Set",
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "addArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addCompositeField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "addDirectives",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "addHiddenField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "flattenFields",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromProp",
        "parameterTypes": [
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "fromProps",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDirective",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectiveArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectives",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isSimpleField",
        "parameterTypes": []
      },
      {
        "name": "makeFields",
        "parameterTypes": []
      },
      {
        "name": "makeSubField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "mergeFields",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "newFieldSelectionBean",
        "parameterTypes": []
      },
      {
        "name": "printTo",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "boolean"
        ]
      },
      {
        "name": "setArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDirective",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setDirectiveArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setDirectives",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.FieldSelectionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DUMMY_TAG_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_EXCLUDE_MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_EXCLUDE_MIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MAX_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MIN_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_OWNER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE_OWNER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ALWAYS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ALWAYS_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_AND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_CONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_DATETIME_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_DATE_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ENDS_WITH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_EQ"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_EXPR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_GE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_GT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ICONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_BLANK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_EMPTY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_NUMBER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LENGTH_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LIKE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_BLANK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_CONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_EMPTY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_IN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_NUMBER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_OR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_REGEX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_SQL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_STARTS_WITH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_TAG_NAME"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.beans.FilterBeanConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getHasNext",
        "parameterTypes": []
      },
      {
        "name": "getHasPrev",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getNextCursor",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "getPageCount",
        "parameterTypes": []
      },
      {
        "name": "getPrevCursor",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "isNoMore",
        "parameterTypes": []
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasNext",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHasPrev",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNextCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoMore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setPrevCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.PageBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_HTML"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_JAVASCRIPT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_JSON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_OCTET"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONTENT_TYPE_TEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENT_TYPE_XML"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "CONTENt_TYPE_TEXT"
      }
    ],
    "methods": [
      {
        "name": "binary",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "js",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "json",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "text",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.WebContentBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getReqId",
        "parameterTypes": []
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setReqId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.CancelRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.GroupFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "isAsc",
        "parameterTypes": []
      },
      {
        "name": "isDesc",
        "parameterTypes": []
      },
      {
        "name": "reverse",
        "parameterTypes": []
      },
      {
        "name": "setAsc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.beans.query.OrderFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "addFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addOrderByNode",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "addOrderField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "addOrderField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getDimFields",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getGroupBy",
        "parameterTypes": []
      },
      {
        "name": "getGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJoins",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getOrderField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSourceName",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hasGroupBy",
        "parameterTypes": []
      },
      {
        "name": "hasGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasOrderBy",
        "parameterTypes": []
      },
      {
        "name": "hasOrderField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDisableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isFindPrev",
        "parameterTypes": []
      },
      {
        "name": "limit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "offset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFindPrev",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGroupBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJoins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSourceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "timeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "transformFilter",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QueryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneExceptOwner",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAggFunc",
        "parameterTypes": []
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAggFunc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QueryFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getDimFields",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getSourceName",
        "parameterTypes": []
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setSourceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QuerySourceBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "getSysDate",
        "parameterTypes": []
      },
      {
        "name": "getSysDateTime",
        "parameterTypes": []
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isWorkDay",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "nextWorkDay",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ],
    "name": "io.nop.api.core.time.DefaultSysCalendar",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ICloneable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.IComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLocation",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationGetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationSetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "get_id",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IWithIdentifier",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateAccessCode",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "generateAccessToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "generateRefreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "getAlgorithm",
        "parameterTypes": []
      },
      {
        "name": "getEncKey",
        "parameterTypes": []
      },
      {
        "name": "getSignKey",
        "parameterTypes": []
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.jwt.JwtAuthTokenProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "config"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginFailCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userSessionCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "verifyCodeCache"
      }
    ],
    "methods": [
      {
        "name": "buildVerifyCacheKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.SessionInfo"
        ]
      },
      {
        "name": "resetLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "setLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setUserContextConfig",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextConfig"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.AbstractUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildVerifyCacheKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "setLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setUserContextConfig",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextConfig"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.LocalUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "generateId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.login.RandomSessionIdGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLoginFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getMaxLoginUserCount",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVerifyCodeTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVerifyKey",
        "parameterTypes": []
      },
      {
        "name": "setLoginFailTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxLoginUserCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setVerifyCodeTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setVerifyKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.UserContextConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.BCryptPasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "getFirstEncoder",
        "parameterTypes": []
      },
      {
        "name": "getSecondEncoder",
        "parameterTypes": []
      },
      {
        "name": "isUseSecondSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstEncoder",
        "parameterTypes": [
          "io.nop.auth.core.password.IPasswordEncoder"
        ]
      },
      {
        "name": "setSecondEncoder",
        "parameterTypes": [
          "io.nop.auth.core.password.IPasswordEncoder"
        ]
      },
      {
        "name": "setUseSecondSalt",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.CompositePasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowedPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDigitCount",
        "parameterTypes": []
      },
      {
        "name": "getLowerCaseCount",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getSpecialCharCount",
        "parameterTypes": []
      },
      {
        "name": "getUpperCaseCount",
        "parameterTypes": []
      },
      {
        "name": "isNotUserName",
        "parameterTypes": []
      },
      {
        "name": "setDigitCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLowerCaseCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNotUserName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSpecialCharCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUpperCaseCount",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.DefaultPasswordPolicy",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.SHA256PasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "height"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "length"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "width"
      }
    ],
    "methods": [
      {
        "name": "checkValid",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "color",
        "parameterTypes": []
      },
      {
        "name": "drawBezierLine",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawBezierLine",
        "parameterTypes": [
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawImage",
        "parameterTypes": [
          "java.lang.String",
          "java.io.OutputStream"
        ]
      },
      {
        "name": "drawLine",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawOval",
        "parameterTypes": [
          "int",
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "drawOval",
        "parameterTypes": [
          "java.awt.Graphics2D"
        ]
      },
      {
        "name": "generateCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadFont",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.verifycode.DefaultVerifyCodeGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "io.nop.graphql.core.biz.IGraphQLBizObject",
          "java.util.function.BiConsumer",
          "io.nop.graphql.core.schema.TypeRegistry"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setDecoratorCollectors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      }
    ],
    "name": "io.nop.biz.crud.CrudBizInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "addRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "addRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "afterEntityChange",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "appendOrderByPk",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "asDict",
        "parameterTypes": [
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchDelete",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchGet",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchModify",
        "parameterTypes": [
          "java.util.List",
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkAllowQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "checkDataAuth",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkDataAuthAfterUpdate",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkEntityFilter",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "checkMandatoryParam",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkMetaFilter",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.xlang.xmeta.IObjMeta",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkUniqueForSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData"
        ]
      },
      {
        "name": "copyForNew",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "dao",
        "parameterTypes": []
      },
      {
        "name": "daoFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "daoProvider",
        "parameterTypes": []
      },
      {
        "name": "defaultPrepareDelete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleteReferences",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleted_findPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doCopyForNew",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDelete",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDeleteEntity",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doSaveEntity",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdate",
        "parameterTypes": [
          "java.util.Map",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdateEntity",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findLogicalDeleted",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.dao.api.IEntityDao",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "findPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCascadeProps",
        "parameterTypes": []
      },
      {
        "name": "getEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.dao.api.IEntityDao"
        ]
      },
      {
        "name": "getThisObj",
        "parameterTypes": []
      },
      {
        "name": "invokeAction",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.context.IServiceContext",
          "io.nop.biz.crud.BizInvocation"
        ]
      },
      {
        "name": "manyToMany",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "orm",
        "parameterTypes": []
      },
      {
        "name": "prepareFindFirstQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "prepareFindPageQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "recoverDeleted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "removeManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "removeRelation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeRelation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "requireEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "requireManyToManyPropMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requirePropMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "save_update",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryTransformer",
        "parameterTypes": [
          "io.nop.dao.api.IQueryTransformer"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "tryDelete",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "trySave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "tryUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "txn",
        "parameterTypes": []
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "updateManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.Map",
          "java.util.function.Predicate",
          "boolean",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "updateRelationsEx",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Map",
          "java.util.function.Predicate",
          "boolean",
          "java.lang.String",
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.biz.crud.CrudBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      }
    ],
    "name": "io.nop.biz.crud.QueryBeanArgsNormalizer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "beans",
        "parameterTypes": []
      },
      {
        "name": "configVars",
        "parameterTypes": []
      },
      {
        "name": "dependsSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.global.IGlobalVariableDefinition"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel",
          "io.nop.core.reflect.IFunctionArgument"
        ]
      },
      {
        "name": "getFunctionDocKey",
        "parameterTypes": [
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "globalFunctions",
        "parameterTypes": []
      },
      {
        "name": "globalVars",
        "parameterTypes": []
      },
      {
        "name": "graphql",
        "parameterTypes": []
      },
      {
        "name": "methods",
        "parameterTypes": [
          "io.nop.biz.dev.beans.GlobalVariableDefBean"
        ]
      },
      {
        "name": "toArgBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel",
          "io.nop.core.reflect.IFunctionArgument"
        ]
      },
      {
        "name": "toArgsBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "toFunctionBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      }
    ],
    "name": "io.nop.biz.dev.DevDocBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "clearComponentCache",
        "parameterTypes": []
      },
      {
        "name": "refreshVirtualFileSystem",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.dev.DevToolBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.ConfigVarBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.FunctionArgBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeclaringClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.FunctionDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isStaticClass",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticClass",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.GlobalVariableDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.biz.dict.DictProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dict.ObjDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildResponse",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "delayInit",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBizObjNames",
        "parameterTypes": []
      },
      {
        "name": "getBizObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBizOperationDefinitions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGraphQLDocument",
        "parameterTypes": []
      },
      {
        "name": "getObjectTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinitions",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType"
        ]
      },
      {
        "name": "getTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTypeDefinitions",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "removeCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveTypeDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLType"
        ]
      },
      {
        "name": "setActionDecoratorCollectors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizModelBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setMakerCheckerProvider",
        "parameterTypes": [
          "io.nop.biz.makerchecker.IMakerCheckerProvider"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      },
      {
        "name": "setSchemaInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTypeRegistry",
        "parameterTypes": [
          "io.nop.graphql.core.schema.TypeRegistry"
        ]
      },
      {
        "name": "updateDynBizModels",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.biz.impl.BizObjectManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAuth",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      }
    ],
    "name": "io.nop.biz.impl.DefaultBizAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.model.BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAction",
        "parameterTypes": [
          "io.nop.biz.model.BizActionModel"
        ]
      },
      {
        "name": "addLoader",
        "parameterTypes": [
          "io.nop.biz.model.BizLoaderModel"
        ]
      },
      {
        "name": "addObserve",
        "parameterTypes": [
          "io.nop.biz.model.BizObserveModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.biz.model.BizModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getActions",
        "parameterTypes": []
      },
      {
        "name": "getDisabledActions",
        "parameterTypes": []
      },
      {
        "name": "getInheritActions",
        "parameterTypes": []
      },
      {
        "name": "getLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoaders",
        "parameterTypes": []
      },
      {
        "name": "getMetaDir",
        "parameterTypes": []
      },
      {
        "name": "getObserve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getObserves",
        "parameterTypes": []
      },
      {
        "name": "getStateMachine",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "hasAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasActions",
        "parameterTypes": []
      },
      {
        "name": "hasLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasLoaders",
        "parameterTypes": []
      },
      {
        "name": "hasObserve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasObserves",
        "parameterTypes": []
      },
      {
        "name": "keySet_actions",
        "parameterTypes": []
      },
      {
        "name": "keySet_loaders",
        "parameterTypes": []
      },
      {
        "name": "keySet_observes",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setActions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabledActions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInheritActions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLoaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMetaDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObserves",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStateMachine",
        "parameterTypes": [
          "io.nop.fsm.model.StateMachineModel"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "addMethod",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredMethods",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicMethods",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isUnsafeAllocated",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "setAllDeclaredConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllDeclaredMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnsafeAllocated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectClass",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllowUnsafeAccess",
        "parameterTypes": []
      },
      {
        "name": "isAllowWrite",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "setAllowUnsafeAccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowWrite",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getSignature",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParameterTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toParamString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectMethod",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenAfterInitialization",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "async",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "expireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "expireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getExpireAfterAccess",
        "parameterTypes": []
      },
      {
        "name": "getExpireAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "getMaximumSize",
        "parameterTypes": []
      },
      {
        "name": "getMaximumWeight",
        "parameterTypes": []
      },
      {
        "name": "getRefreshAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "isAsync",
        "parameterTypes": []
      },
      {
        "name": "isCacheTypeChanged",
        "parameterTypes": [
          "io.nop.commons.cache.CacheConfig"
        ]
      },
      {
        "name": "isDestroyOnRemove",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "isWeakKeys",
        "parameterTypes": []
      },
      {
        "name": "isWeakValues",
        "parameterTypes": []
      },
      {
        "name": "newConfig",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "newConfig",
        "parameterTypes": [
          "int",
          "long"
        ]
      },
      {
        "name": "setAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDestroyOnRemove",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setExpireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaximumSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumWeight",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakKeys",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakValues",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useMetrics",
        "parameterTypes": []
      },
      {
        "name": "weakKeys",
        "parameterTypes": []
      },
      {
        "name": "weakValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.CacheConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAllCache",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.LocalCacheProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.lang.ITagSetSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.ILifeCycle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginStop",
        "parameterTypes": []
      },
      {
        "name": "checkIsActive",
        "parameterTypes": []
      },
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "isActive",
        "parameterTypes": []
      },
      {
        "name": "isAllowRestart",
        "parameterTypes": []
      },
      {
        "name": "setAllowRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.LifeCycleSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "lower"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "upper"
      }
    ],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.text.CharacterCase",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.config.initialize.ConfigInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.config.source.IConfigSource"
        ]
      },
      {
        "name": "createConnection",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRefreshInterval",
        "parameterTypes": []
      },
      {
        "name": "getSelectAllQuery",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSelectAllQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valid",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.config.source.jdbc.JdbcConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.dict.DictModelParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.CoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.ReflectionHelperMethodInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.VirtualFileSystemInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.lang.json.IJsonSerializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkReadOnly",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "flatten",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachEntry",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getLocValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.json.JObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_assignAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "_assignParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "_getElements",
        "parameterTypes": []
      },
      {
        "name": "_isAllChildText",
        "parameterTypes": []
      },
      {
        "name": "_isAnyChildCDATA",
        "parameterTypes": []
      },
      {
        "name": "_isElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "java.lang.String"
        ]
      },
      {
        "name": "addAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "after",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "after",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "append",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendBodyXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "appendBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "appendScript",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "appendTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "assureAtMostOneChild",
        "parameterTypes": []
      },
      {
        "name": "attachChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "attrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer"
        ]
      },
      {
        "name": "attrLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "attrTextOrEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": []
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "before",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": []
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyToXJson",
        "parameterTypes": []
      },
      {
        "name": "checkNotReadOnly",
        "parameterTypes": []
      },
      {
        "name": "child",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "childByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childIndex",
        "parameterTypes": []
      },
      {
        "name": "childIndexOfSameTag",
        "parameterTypes": []
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childrenByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenToJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAttrs",
        "parameterTypes": []
      },
      {
        "name": "clearBody",
        "parameterTypes": []
      },
      {
        "name": "clearChildren",
        "parameterTypes": []
      },
      {
        "name": "clearComment",
        "parameterTypes": []
      },
      {
        "name": "clearLocation",
        "parameterTypes": []
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "closest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectXPath",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "commonAncestor",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "content",
        "parameterTypes": []
      },
      {
        "name": "content",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "content",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "contentAsInt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "contentText",
        "parameterTypes": []
      },
      {
        "name": "countChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "countChildByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "countChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "depth",
        "parameterTypes": []
      },
      {
        "name": "detach",
        "parameterTypes": []
      },
      {
        "name": "detachChildren",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "element",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elementAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "elementText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elements",
        "parameterTypes": []
      },
      {
        "name": "elements",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findAllByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "firstChild",
        "parameterTypes": []
      },
      {
        "name": "firstLeaf",
        "parameterTypes": []
      },
      {
        "name": "forEachAttr",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachNode",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "fullXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrCount",
        "parameterTypes": []
      },
      {
        "name": "getAttrNames",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getDocType",
        "parameterTypes": []
      },
      {
        "name": "getDumpString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstruction",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getParentParent",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagNameWithoutNs",
        "parameterTypes": []
      },
      {
        "name": "getTreeLevel",
        "parameterTypes": []
      },
      {
        "name": "getXmlnsForUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttr",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBody",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasContent",
        "parameterTypes": []
      },
      {
        "name": "hasMixedContent",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": []
      },
      {
        "name": "innerHtml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "insertAfterXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "insertAfterXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "insertBeforeXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "insertBeforeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "insertChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "insertChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "insertParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isCDataText",
        "parameterTypes": []
      },
      {
        "name": "isDummyNode",
        "parameterTypes": []
      },
      {
        "name": "isElementNode",
        "parameterTypes": []
      },
      {
        "name": "isTextNode",
        "parameterTypes": []
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.commons.functional.IEqualsChecker"
        ]
      },
      {
        "name": "jsonText",
        "parameterTypes": []
      },
      {
        "name": "jsonText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastChild",
        "parameterTypes": []
      },
      {
        "name": "lastLeaf",
        "parameterTypes": []
      },
      {
        "name": "make",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeDocNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeNode",
        "parameterTypes": []
      },
      {
        "name": "makeTextNode",
        "parameterTypes": []
      },
      {
        "name": "matchAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "mergeAttrs",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "needAddJsonPrefix",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newAttrError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode",
          "java.lang.String"
        ]
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "nextElementSibling",
        "parameterTypes": []
      },
      {
        "name": "nextLeaf",
        "parameterTypes": []
      },
      {
        "name": "nextSibling",
        "parameterTypes": []
      },
      {
        "name": "normalizeContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeScriptContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "outerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "output",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalOutput"
        ]
      },
      {
        "name": "ownText",
        "parameterTypes": []
      },
      {
        "name": "parent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "parents",
        "parameterTypes": []
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependBodyXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prependBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "prependChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prevElementSibling",
        "parameterTypes": []
      },
      {
        "name": "prevLeaf",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeHandler"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrs",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeAttrsIf",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "removeAttrsWithPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "removeChildByIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "removeNextSiblings",
        "parameterTypes": []
      },
      {
        "name": "renameAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameChild",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameNsPrefix",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceBy",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceByList",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "replaceByXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "requireAttrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "root",
        "parameterTypes": []
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "selectMany",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "selectOne",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDocType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.IXNodeExtension"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstruction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "syncAllExtensionFromNode",
        "parameterTypes": []
      },
      {
        "name": "syncAllExtensionToNode",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "toXJson",
        "parameterTypes": []
      },
      {
        "name": "transformAttr",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": []
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "updateSelected",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector",
          "java.lang.Object"
        ]
      },
      {
        "name": "visit",
        "parameterTypes": [
          "io.nop.core.model.tree.ITreeVisitor"
        ]
      },
      {
        "name": "wrapChildren",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.xml.XNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "defineMethod",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalFunction",
          "boolean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "makeComplexPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "method_invoke",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "obj_name",
        "parameterTypes": []
      },
      {
        "name": "obj_propValues",
        "parameterTypes": []
      },
      {
        "name": "prop_allow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.object.DynamicObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getPublishDate",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "isDynamic",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDynamic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.module.ModuleModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropGetMissingHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyExtPropsTo",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "getExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowedExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeExtPropsIfAbsent",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_remove",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.reflect.hook.SerializableExtensibleObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.resource.component.AbstractComponentModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "findResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceName",
        "parameterTypes": []
      },
      {
        "name": "getResourceNameNoExt",
        "parameterTypes": []
      },
      {
        "name": "getResourcePath",
        "parameterTypes": []
      },
      {
        "name": "getResourceStdPath",
        "parameterTypes": []
      },
      {
        "name": "getSiblingResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUseCpCache",
        "parameterTypes": []
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      },
      {
        "name": "setResourcePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": []
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractTextResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.IResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.ITextResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "FIND_FIRST_RANGE"
      }
    ],
    "methods": [
      {
        "name": "exists",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dao.dataset.IRowMapper"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dataset.IRowMapper"
        ]
      }
    ],
    "name": "io.nop.dao.api.AbstractSqlExecutor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "get_id",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.api.IDaoEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dao.dataset.IRowMapper"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.api.ISqlExecutor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compare",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compare",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.dao.dialect.DialectSelector"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDialectName",
        "parameterTypes": []
      },
      {
        "name": "getDriverMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverName",
        "parameterTypes": []
      },
      {
        "name": "getPdmTargetType",
        "parameterTypes": []
      },
      {
        "name": "getProductName",
        "parameterTypes": []
      },
      {
        "name": "getProductVersion",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "setDialectName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDriverMajorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverMinorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPdmTargetType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.DialectSelector",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.IDialectProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildFunctionSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "initDataTypes",
        "parameterTypes": []
      },
      {
        "name": "initFunctions",
        "parameterTypes": []
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcGetString",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.impl.DialectImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "fromLiteral",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int"
        ]
      },
      {
        "name": "isJavaType",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "toLiteral",
        "parameterTypes": [
          "java.lang.Object",
          "io.nop.dao.dialect.IDialect"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.DefaultJsonTypeHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.H2JsonTypeHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.loader.DialectModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectDiscoverySqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectErrorCodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectFeatures",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectSqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCodeOrName",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlDataTypeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlNativeFunctionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlTemplateModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSelectCatalogs",
        "parameterTypes": []
      },
      {
        "name": "getSelectConstaints",
        "parameterTypes": []
      },
      {
        "name": "getSelectIndexes",
        "parameterTypes": []
      },
      {
        "name": "getSelectPrimaryKeys",
        "parameterTypes": []
      },
      {
        "name": "getSelectSchemas",
        "parameterTypes": []
      },
      {
        "name": "getSelectSequences",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTables",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViews",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSelectCatalogs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectConstaints",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectIndexes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectPrimaryKeys",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSchemas",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSequences",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTables",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViews",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectDiscoverySqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUseSqlState",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseSqlState",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValues",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectErrorCodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportILike",
        "parameterTypes": []
      },
      {
        "name": "getSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "getSupportNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "getSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "getSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "getSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "getSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "getSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "getUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSupportBatchUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportBatchUpdateCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportExecuteLargeUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportILike",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportLargeMaxRows",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportQueryTimeout",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportRowValueConstructor",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSavePoint",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSequence",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTransaction",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTruncateTable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportWithAsClause",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseGetStringForDate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectFeatures",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addErrorCode",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "addSqlDataType",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllSchemaPattern",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getDbProductNames",
        "parameterTypes": []
      },
      {
        "name": "getDefaultNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getDiscoverySqls",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "getFeatures",
        "parameterTypes": []
      },
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrlPattern",
        "parameterTypes": []
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getKeywordUnderscore",
        "parameterTypes": []
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getRename",
        "parameterTypes": []
      },
      {
        "name": "getReservedKeywords",
        "parameterTypes": []
      },
      {
        "name": "getSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "getSqlExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSqls",
        "parameterTypes": []
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getUpsertHandler",
        "parameterTypes": []
      },
      {
        "name": "hasErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "hasFunctions",
        "parameterTypes": []
      },
      {
        "name": "hasRename",
        "parameterTypes": []
      },
      {
        "name": "hasSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "keySet_errorCodes",
        "parameterTypes": []
      },
      {
        "name": "keySet_functions",
        "parameterTypes": []
      },
      {
        "name": "keySet_sqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllSchemaPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setDbProductNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDiscoverySqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorCodes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFeatures",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "setFunctions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGeometryTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrlPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJsonTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeywordQuote",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setKeywordUnderscore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxBytesSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxStringSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPaginationHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRename",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setReservedKeywords",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSqlDataTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqlExceptionTranslator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "setTableNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setUpsertHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCreateSequence",
        "parameterTypes": []
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDropSequence",
        "parameterTypes": []
      },
      {
        "name": "getDropTable",
        "parameterTypes": []
      },
      {
        "name": "getEscapeSlash",
        "parameterTypes": []
      },
      {
        "name": "getFalseString",
        "parameterTypes": []
      },
      {
        "name": "getForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getInsertKeyword",
        "parameterTypes": []
      },
      {
        "name": "getLockHint",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDual",
        "parameterTypes": []
      },
      {
        "name": "getSequenceNextVal",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTrueString",
        "parameterTypes": []
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValidationQuery",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCreateSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEscapeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFalseString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectFromDual",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSequenceNextVal",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrueString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectSqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBinder",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isAllowExceedPrecision",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAllowExceedPrecision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowPrecision",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlDataTypeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlNativeFunctionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getHasParenthesis",
        "parameterTypes": []
      },
      {
        "name": "getMaxArgCount",
        "parameterTypes": []
      },
      {
        "name": "getMinArgCount",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRealName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSpecial",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasParenthesis",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRealName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setSpecial",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlNativeFunctionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlTemplateModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlTemplateModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.AbstractPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.IPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.LimitOffsetPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.initialize.DaoDialectInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "callFunc",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "currentConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDaoMetrics",
        "parameterTypes": []
      },
      {
        "name": "getDbCurrentTimestamp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDbEstimatedClock",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runWithConnection",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runWithConnection",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "setCacheProvider",
        "parameterTypes": [
          "io.nop.commons.cache.ICacheProvider"
        ]
      },
      {
        "name": "setDaoMetrics",
        "parameterTypes": [
          "io.nop.dao.metrics.IDaoMetrics"
        ]
      },
      {
        "name": "setDialectProvider",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialectProvider"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialect",
          "java.sql.PreparedStatement",
          "io.nop.core.lang.sql.SQL",
          "boolean"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "txn",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.jdbc.impl.JdbcTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getDaoMetrics",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDaoMetrics",
        "parameterTypes": [
          "io.nop.dao.metrics.IDaoMetrics"
        ]
      },
      {
        "name": "setEagerReleaseConnection",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.dao.jdbc.txn.JdbcTransactionFactory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginBatchUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "beginExecuteUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "beginQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "endBatchUpdate",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "endExecuteUpdate",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "endQuery",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "boolean"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRegistry",
        "parameterTypes": []
      },
      {
        "name": "onObtainConnection",
        "parameterTypes": []
      },
      {
        "name": "onTransactionFailure",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onTransactionOpen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onTransactionSuccess",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.metrics.DaoMetricsImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "isSupportShard",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selectShard",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "selectShards",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.shard.EmptyShardSelector",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addQuerySpace",
        "parameterTypes": [
          "java.lang.String",
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "getDefaultListener",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMainTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuerySpaces",
        "parameterTypes": []
      },
      {
        "name": "getRegisteredTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionFactory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerTransaction",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      },
      {
        "name": "removeQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDefaultFactory",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionFactory"
        ]
      },
      {
        "name": "setDefaultListener",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionListener"
        ]
      },
      {
        "name": "setQuerySpaceToDialectConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpaceToDialectMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTransactionFactoryMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTransactionMetrics",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionMetrics"
        ]
      },
      {
        "name": "setTxnGroupMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTxnGroupMapConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unregisterTransaction",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      }
    ],
    "name": "io.nop.dao.txn.impl.DefaultTransactionManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMainTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRegisteredTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runInTransaction",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.annotations.txn.TransactionPropagation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInTransactionAsync",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.annotations.txn.TransactionPropagation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runWithoutTransaction",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionManager"
        ]
      }
    ],
    "name": "io.nop.dao.txn.impl.TransactionTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.dao.txn.interceptor.TransactionalMethodInterceptor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setPropagation",
        "parameterTypes": [
          "io.nop.api.core.annotations.txn.TransactionPropagation"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "setTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.utils.TransactionalFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "IGNORE_HEADERS"
      }
    ],
    "methods": [
      {
        "name": "downloadAsync",
        "parameterTypes": [
          "io.nop.api.core.beans.ApiRequest"
        ]
      },
      {
        "name": "getGraphQLEngine",
        "parameterTypes": []
      },
      {
        "name": "shouldIgnoreHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uploadAsync",
        "parameterTypes": [
          "io.nop.api.core.beans.ApiRequest"
        ]
      }
    ],
    "name": "io.nop.file.core.AbstractGraphQLFileService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "fileStore"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "maxFileSize"
      }
    ],
    "methods": [
      {
        "name": "checkBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkFileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkMaxSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "checkUploadAuth",
        "parameterTypes": [
          "io.nop.file.core.UploadRequestBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "download",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "loadFileRecord",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setAllowedFileExts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setBizAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IBizAuthChecker"
        ]
      },
      {
        "name": "setFileStore",
        "parameterTypes": [
          "io.nop.file.core.IFileStore"
        ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "upload",
        "parameterTypes": [
          "io.nop.file.core.UploadRequestBean",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.file.core.NopFileStoreBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjId",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFileExt",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getLastModified",
        "parameterTypes": []
      },
      {
        "name": "getLength",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": []
      },
      {
        "name": "setBizObjId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInputStream",
        "parameterTypes": [
          "java.io.InputStream"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLength",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.file.core.UploadRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFilename",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.file.core.UploadResponseBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.file.dao.entity.NopFileRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileExt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileHash"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileLastModified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileLength"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_filePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_mimeType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileExt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileHash"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileLastModified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileLength"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_filePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_mimeType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizObjId",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFileExt",
        "parameterTypes": []
      },
      {
        "name": "getFileHash",
        "parameterTypes": []
      },
      {
        "name": "getFileId",
        "parameterTypes": []
      },
      {
        "name": "getFileLastModified",
        "parameterTypes": []
      },
      {
        "name": "getFileLength",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "getFilePath",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizObjId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileLastModified",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setFileLength",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.file.dao.entity._gen._NopFileRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "attachFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "checkMaxSize",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "decodeFileId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "detachFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFileLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFileResource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "newFileId",
        "parameterTypes": []
      },
      {
        "name": "newPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeTempFileByOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveFile",
        "parameterTypes": [
          "io.nop.file.core.UploadRequestBean",
          "long"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setKeepFileExt",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setResourceStore",
        "parameterTypes": [
          "io.nop.core.resource.IResourceStore"
        ]
      }
    ],
    "name": "io.nop.file.dao.store.DaoResourceFileStore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildRequest",
        "parameterTypes": [
          "io.vertx.core.http.HttpServerRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "download",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.vertx.core.http.HttpServerRequest"
        ]
      },
      {
        "name": "uploadFileAsync",
        "parameterTypes": [
          "org.jboss.resteasy.plugins.providers.multipart.MultipartFormDataInput",
          "io.vertx.core.http.HttpServerRequest"
        ]
      }
    ],
    "name": "io.nop.file.quarkus.web.QuarkusFileService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.graphql.core.IBizModelImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setTransactionalInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.DefaultOperationFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildGraphQLResponse",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "buildRpcResponse",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "buildSelectionBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.graphql.core.ast.GraphQLSelectionSet",
          "java.util.Map"
        ]
      },
      {
        "name": "cancel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkOperationArgs",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLFieldDefinition",
          "java.util.Map"
        ]
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "executeGraphQLAsync",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "executeRpcAsync",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "getDirective",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDocumentCache",
        "parameterTypes": []
      },
      {
        "name": "getExecutionInvoker",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "getOperationDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String"
        ]
      },
      {
        "name": "getSchemaLoader",
        "parameterTypes": []
      },
      {
        "name": "getTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initGraphQLContext",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext",
          "io.nop.graphql.core.ParsedGraphQLRequest"
        ]
      },
      {
        "name": "initRpcContext",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext",
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String",
          "io.nop.api.core.beans.ApiRequest"
        ]
      },
      {
        "name": "isEnableActionAuth",
        "parameterTypes": []
      },
      {
        "name": "isEnableDataAuth",
        "parameterTypes": []
      },
      {
        "name": "isIntrospection",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperation"
        ]
      },
      {
        "name": "makeRpcProxy",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "newGraphQLContext",
        "parameterTypes": []
      },
      {
        "name": "parseOperation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "resolveSelection",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.graphql.core.ast.GraphQLSelectionSet",
          "java.util.Map"
        ]
      },
      {
        "name": "resolveSelections",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLDocument",
          "int"
        ]
      },
      {
        "name": "setActionAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IActionAuthChecker"
        ]
      },
      {
        "name": "setBuiltinSchema",
        "parameterTypes": [
          "io.nop.graphql.core.schema.GraphQLSchema"
        ]
      },
      {
        "name": "setDataAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IDataAuthChecker"
        ]
      },
      {
        "name": "setEnableActionAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableDataAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExecutionInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      },
      {
        "name": "setFlowControlRunner",
        "parameterTypes": [
          "io.nop.rpc.api.flowcontrol.IFlowControlRunner"
        ]
      },
      {
        "name": "setGraphQLHook",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLHook"
        ]
      },
      {
        "name": "setOperationInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      },
      {
        "name": "setSchemaLoader",
        "parameterTypes": [
          "io.nop.graphql.core.schema.IGraphQLSchemaLoader"
        ]
      },
      {
        "name": "subscribeGraphQL",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.GraphQLEngine",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginDataFetch",
        "parameterTypes": [
          "io.nop.graphql.core.IDataFetchingEnvironment"
        ]
      },
      {
        "name": "beginExecute",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "beginInvoke",
        "parameterTypes": [
          "io.nop.graphql.core.IDataFetchingEnvironment"
        ]
      },
      {
        "name": "createTimer",
        "parameterTypes": [
          "java.lang.String",
          "[Lio.micrometer.core.instrument.Tag;"
        ]
      },
      {
        "name": "endDataFetch",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IDataFetchingEnvironment"
        ]
      },
      {
        "name": "endExecute",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "endInvoke",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IDataFetchingEnvironment"
        ]
      },
      {
        "name": "meterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.MetricsGraphQLHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.graphql.core.initialize.GraphQLCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "cancel",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.CancelRequestBean",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.graphql.core.web.SysBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "io.nop.graphql.core.biz.IGraphQLBizObject",
          "java.util.function.BiConsumer",
          "io.nop.graphql.core.schema.TypeRegistry"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.graphql.orm.OrmBizInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "ignoreSslCerts"
      }
    ],
    "methods": [
      {
        "name": "getConnectTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDnsResolver",
        "parameterTypes": []
      },
      {
        "name": "getExecutor",
        "parameterTypes": []
      },
      {
        "name": "getHostnameVerifier",
        "parameterTypes": []
      },
      {
        "name": "getHttpProxy",
        "parameterTypes": []
      },
      {
        "name": "getHttpsProxy",
        "parameterTypes": []
      },
      {
        "name": "getKeepAliveDuration",
        "parameterTypes": []
      },
      {
        "name": "getKeyManagers",
        "parameterTypes": []
      },
      {
        "name": "getLogLevel",
        "parameterTypes": []
      },
      {
        "name": "getMaxConnTotal",
        "parameterTypes": []
      },
      {
        "name": "getMaxIdleCount",
        "parameterTypes": []
      },
      {
        "name": "getMaxIdleTime",
        "parameterTypes": []
      },
      {
        "name": "getMaxRequestsPerHost",
        "parameterTypes": []
      },
      {
        "name": "getMaxResultLength",
        "parameterTypes": []
      },
      {
        "name": "getNoProxy",
        "parameterTypes": []
      },
      {
        "name": "getReadTimeout",
        "parameterTypes": []
      },
      {
        "name": "getSecureRandom",
        "parameterTypes": []
      },
      {
        "name": "getSslSocketFactory",
        "parameterTypes": []
      },
      {
        "name": "getSslVersion",
        "parameterTypes": []
      },
      {
        "name": "getThreadName",
        "parameterTypes": []
      },
      {
        "name": "getThreadPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getWriteTimeout",
        "parameterTypes": []
      },
      {
        "name": "getX509TrustManagers",
        "parameterTypes": []
      },
      {
        "name": "isFollowRedirects",
        "parameterTypes": []
      },
      {
        "name": "isHttp2",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreSslCerts",
        "parameterTypes": []
      },
      {
        "name": "isLogBody",
        "parameterTypes": []
      },
      {
        "name": "isPrettyJson",
        "parameterTypes": []
      },
      {
        "name": "isRetryOnConnectionFailure",
        "parameterTypes": []
      },
      {
        "name": "isUseSsl",
        "parameterTypes": []
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDnsResolver",
        "parameterTypes": [
          "io.nop.http.api.IDnsResolver"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.util.concurrent.Executor"
        ]
      },
      {
        "name": "setFollowRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHostnameVerifier",
        "parameterTypes": [
          "javax.net.ssl.HostnameVerifier"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHttpProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpsProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreSslCerts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepAliveDuration",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setKeyManagers",
        "parameterTypes": [
          "[Ljavax.net.ssl.KeyManager;"
        ]
      },
      {
        "name": "setLogBody",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogLevel",
        "parameterTypes": [
          "io.nop.api.core.util.LogLevel"
        ]
      },
      {
        "name": "setMaxConnTotal",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdleCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdleTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxRequestsPerHost",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxResultLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNoProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrettyJson",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRetryOnConnectionFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSecureRandom",
        "parameterTypes": [
          "java.security.SecureRandom"
        ]
      },
      {
        "name": "setSslSocketFactory",
        "parameterTypes": [
          "javax.net.ssl.SSLSocketFactory"
        ]
      },
      {
        "name": "setSslVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUseSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWriteTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setX509TrustManagers",
        "parameterTypes": [
          "[Ljavax.net.ssl.X509TrustManager;"
        ]
      }
    ],
    "name": "io.nop.http.api.client.HttpClientConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "filterAsync",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getPropagateHeaders",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "initContext",
        "parameterTypes": [
          "io.nop.api.core.context.IContext",
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.http.api.server.ContextHttpServerFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "downloadAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.http.api.client.IHttpOutputFile",
          "io.nop.http.api.client.DownloadOptions",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "fetchAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "newSSLContext",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "toBody",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "toHttpResponse",
        "parameterTypes": [
          "java.net.http.HttpResponse"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": [
          "java.net.http.HttpHeaders"
        ]
      },
      {
        "name": "toURI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uploadAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.http.api.client.IHttpInputFile",
          "io.nop.http.api.client.UploadOptions",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "wrapError",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ],
    "name": "io.nop.http.client.jdk.JdkHttpClient",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.initialize.IocCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanAliasModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanCollectBeansValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addMissingBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDisabled",
        "parameterTypes": []
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanConditionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConstantModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConstructorArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanIfPropertyCondition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAnnotationClasses",
        "parameterTypes": []
      },
      {
        "name": "setAnnotationClasses",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanPointcutModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanPropValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanPropertyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanRefValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "getConstructorArgCount",
        "parameterTypes": []
      },
      {
        "name": "getEmbeddedId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setEmbeddedId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeansModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanAliasModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanAliasModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanCollectBeansValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getByAnnotation",
        "parameterTypes": []
      },
      {
        "name": "getByType",
        "parameterTypes": []
      },
      {
        "name": "getExcludeTag",
        "parameterTypes": []
      },
      {
        "name": "getIncludeTag",
        "parameterTypes": []
      },
      {
        "name": "getNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "isAsMap",
        "parameterTypes": []
      },
      {
        "name": "isIocIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isIocOptional",
        "parameterTypes": []
      },
      {
        "name": "isOnlyConcreteClasses",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAsMap",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setByAnnotation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setByType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeTag",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIncludeTag",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyConcreteClasses",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanCollectBeansValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConditionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIfProperty",
        "parameterTypes": []
      },
      {
        "name": "getMissingBean",
        "parameterTypes": []
      },
      {
        "name": "getMissingClass",
        "parameterTypes": []
      },
      {
        "name": "getMissingResource",
        "parameterTypes": []
      },
      {
        "name": "getOnBean",
        "parameterTypes": []
      },
      {
        "name": "getOnBeanType",
        "parameterTypes": []
      },
      {
        "name": "getOnClass",
        "parameterTypes": []
      },
      {
        "name": "getOnExpr",
        "parameterTypes": []
      },
      {
        "name": "getOnMissingBeanType",
        "parameterTypes": []
      },
      {
        "name": "getOnResource",
        "parameterTypes": []
      },
      {
        "name": "getUnlessProperty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIfProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanIfPropertyCondition"
        ]
      },
      {
        "name": "setMissingBean",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMissingClass",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMissingResource",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnBean",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnBeanType",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnClass",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setOnMissingBeanType",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnResource",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUnlessProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanUnlessPropertyCondition"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConditionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstantModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "getStaticField",
        "parameterTypes": []
      },
      {
        "name": "isIocAllowOverride",
        "parameterTypes": []
      },
      {
        "name": "isIocDefault",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocDefault",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticField",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConstantModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstructorArgModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIndex",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isIocSkipIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIocSkipIfEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConstructorArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanIfPropertyCondition"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isEnableIfDebug",
        "parameterTypes": []
      },
      {
        "name": "isEnableIfMissing",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setEnableIfDebug",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableIfMissing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanIfPropertyCondition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanImportModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIocPointcut",
        "parameterTypes": []
      },
      {
        "name": "getIocPriority",
        "parameterTypes": []
      },
      {
        "name": "getIocTags",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isIocAllowOverride",
        "parameterTypes": []
      },
      {
        "name": "isIocDefault",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocDefault",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocPointcut",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPointcutModel"
        ]
      },
      {
        "name": "setIocPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIocTags",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPointcutModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAnnotations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPointcutModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "io.nop.ioc.model.IBeanPropValue"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPropValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropertyModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isIocSkipIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIocSkipIfEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPropertyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanRefValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBean",
        "parameterTypes": []
      },
      {
        "name": "isIocIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isIocOptional",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocOptional",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanRefValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addConstructorArg",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstructorArgModel"
        ]
      },
      {
        "name": "addIocInterceptor",
        "parameterTypes": [
          "io.nop.ioc.model.BeanInterceptorModel"
        ]
      },
      {
        "name": "addProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropertyModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAutowire",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getConstructorArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConstructorArgs",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDestroyMethod",
        "parameterTypes": []
      },
      {
        "name": "getFactoryBean",
        "parameterTypes": []
      },
      {
        "name": "getFactoryMethod",
        "parameterTypes": []
      },
      {
        "name": "getInitMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocAfter",
        "parameterTypes": []
      },
      {
        "name": "getIocBeanMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocBefore",
        "parameterTypes": []
      },
      {
        "name": "getIocBuild",
        "parameterTypes": []
      },
      {
        "name": "getIocCondition",
        "parameterTypes": []
      },
      {
        "name": "getIocConfigPrefix",
        "parameterTypes": []
      },
      {
        "name": "getIocDelayMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocDelayStart",
        "parameterTypes": []
      },
      {
        "name": "getIocDestroy",
        "parameterTypes": []
      },
      {
        "name": "getIocInit",
        "parameterTypes": []
      },
      {
        "name": "getIocInitOrder",
        "parameterTypes": []
      },
      {
        "name": "getIocInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getIocOnConfigRefresh",
        "parameterTypes": []
      },
      {
        "name": "getIocRefreshConfig",
        "parameterTypes": []
      },
      {
        "name": "getIocRefreshConfigMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocRestart",
        "parameterTypes": []
      },
      {
        "name": "getIocRestartMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocSecurityDomain",
        "parameterTypes": []
      },
      {
        "name": "getIocType",
        "parameterTypes": []
      },
      {
        "name": "getLazyInit",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "hasConstructorArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasConstructorArgs",
        "parameterTypes": []
      },
      {
        "name": "hasIocInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "hasProperties",
        "parameterTypes": []
      },
      {
        "name": "hasProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAutowireCandidate",
        "parameterTypes": []
      },
      {
        "name": "isIocAop",
        "parameterTypes": []
      },
      {
        "name": "isIocAutoRefresh",
        "parameterTypes": []
      },
      {
        "name": "isIocForceInit",
        "parameterTypes": []
      },
      {
        "name": "isIocProxy",
        "parameterTypes": []
      },
      {
        "name": "keySet_constructorArgs",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "keySet_properties",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutowire",
        "parameterTypes": [
          "io.nop.ioc.model.AutowireType"
        ]
      },
      {
        "name": "setAutowireCandidate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstructorArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDestroyMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFactoryBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFactoryMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAfter",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocAop",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocAutoRefresh",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocBeanMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocBefore",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocBuild",
        "parameterTypes": [
          "io.nop.ioc.model.BeanBuildModel"
        ]
      },
      {
        "name": "setIocCondition",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConditionModel"
        ]
      },
      {
        "name": "setIocConfigPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocDelayMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocDelayStart",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocDestroy",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocForceInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocInit",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocInitOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIocInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocOnConfigRefresh",
        "parameterTypes": [
          "io.nop.ioc.model.BeanOnConfigRefresh"
        ]
      },
      {
        "name": "setIocProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocRefreshConfig",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocRefreshConfigMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocRestart",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocRestartMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocSecurityDomain",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocType",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.ioc.model.BeanAliasModel"
        ]
      },
      {
        "name": "addBean",
        "parameterTypes": [
          "io.nop.ioc.model.BeanModel"
        ]
      },
      {
        "name": "addEntry",
        "parameterTypes": [
          "io.nop.ioc.model.BeanMapModel"
        ]
      },
      {
        "name": "addImport",
        "parameterTypes": [
          "io.nop.ioc.model.BeanImportModel"
        ]
      },
      {
        "name": "addIocConfig",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConfigModel"
        ]
      },
      {
        "name": "addIocListener",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListenerModel"
        ]
      },
      {
        "name": "addUtilConstant",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstantModel"
        ]
      },
      {
        "name": "addUtilList",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListModel"
        ]
      },
      {
        "name": "addUtilMap",
        "parameterTypes": [
          "io.nop.ioc.model.BeanMapModel"
        ]
      },
      {
        "name": "addUtilSet",
        "parameterTypes": [
          "io.nop.ioc.model.BeanSetModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeansModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeans",
        "parameterTypes": []
      },
      {
        "name": "getEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImports",
        "parameterTypes": []
      },
      {
        "name": "getIocConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocConfigs",
        "parameterTypes": []
      },
      {
        "name": "getIocListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocListeners",
        "parameterTypes": []
      },
      {
        "name": "getIocSecurityDomain",
        "parameterTypes": []
      },
      {
        "name": "getUtilConstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilConstants",
        "parameterTypes": []
      },
      {
        "name": "getUtilList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilLists",
        "parameterTypes": []
      },
      {
        "name": "getUtilMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilMaps",
        "parameterTypes": []
      },
      {
        "name": "getUtilSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilSets",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBeans",
        "parameterTypes": []
      },
      {
        "name": "hasEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImports",
        "parameterTypes": []
      },
      {
        "name": "hasIocConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocConfigs",
        "parameterTypes": []
      },
      {
        "name": "hasIocListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocListeners",
        "parameterTypes": []
      },
      {
        "name": "hasUtilConstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilConstants",
        "parameterTypes": []
      },
      {
        "name": "hasUtilList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilLists",
        "parameterTypes": []
      },
      {
        "name": "hasUtilMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilMaps",
        "parameterTypes": []
      },
      {
        "name": "hasUtilSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilSets",
        "parameterTypes": []
      },
      {
        "name": "isDefaultLazyInit",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_beans",
        "parameterTypes": []
      },
      {
        "name": "keySet_imports",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocConfigs",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocListeners",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilConstants",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilLists",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilMaps",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilSets",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setImports",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocConfigs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocListeners",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocSecurityDomain",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUtilConstants",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilLists",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilMaps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilSets",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeansModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.ioc.support.UtilFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "reinitWorkers",
        "parameterTypes": []
      },
      {
        "name": "setInitScriptPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJsLibLoader",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "setWorkerCount",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.js.engine.JavaScriptService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.log.java.JavaLoggerConfiguratorInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_addPkWatcher",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "orm_attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntityEnhancer"
        ]
      },
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_computed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "orm_detach",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyNewValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyOldValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyPropIds",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_flushComponent",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_forEachDirtyProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_forEachInitedProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_fullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_inited",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_locked",
        "parameterTypes": []
      },
      {
        "name": "orm_locked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_markFullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_propDirty",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propInited",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propOldValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": [
          "io.nop.orm.OrmEntityState"
        ]
      },
      {
        "name": "orm_tenantId",
        "parameterTypes": []
      },
      {
        "name": "orm_unload",
        "parameterTypes": []
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_useOldValues",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.IOrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.IOrmEntityLifecycle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBoolean",
        "parameterTypes": []
      },
      {
        "name": "getByte",
        "parameterTypes": []
      },
      {
        "name": "getChar",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getDatetime",
        "parameterTypes": []
      },
      {
        "name": "getDecimal",
        "parameterTypes": []
      },
      {
        "name": "getDouble",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getFloat",
        "parameterTypes": []
      },
      {
        "name": "getInt",
        "parameterTypes": []
      },
      {
        "name": "getLong",
        "parameterTypes": []
      },
      {
        "name": "getShort",
        "parameterTypes": []
      },
      {
        "name": "getString",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setBoolean",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setByte",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setChar",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDatetime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDecimal",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDouble",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFloat",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setInt",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLong",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setShort",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.IOrmKeyValueTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_enhancer",
        "parameterTypes": []
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.IOrmObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "dao",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "daoForTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      },
      {
        "name": "normalizeEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "register",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.dao.OrmDaoProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "enhanceBinder",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.model.IColumnModel",
          "io.nop.core.lang.sql.binder.IDataParameterBinder"
        ]
      },
      {
        "name": "enhanceBinder",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.model.IColumnModel",
          "io.nop.dataset.binder.IDataParameterBinder"
        ]
      },
      {
        "name": "setTextCipher",
        "parameterTypes": [
          "io.nop.commons.crypto.ITextCipher"
        ]
      }
    ],
    "name": "io.nop.orm.factory.DefaultOrmColumnBinderEnhancer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "reloadOrmModel",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.factory.OrmSessionFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "io.nop.orm.IOrmInterceptor"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanProvider",
        "parameterTypes": []
      },
      {
        "name": "getColumnBinderEnhancer",
        "parameterTypes": []
      },
      {
        "name": "getDefaultDynamicEntityClass",
        "parameterTypes": []
      },
      {
        "name": "getDefaultQueryExecutor",
        "parameterTypes": []
      },
      {
        "name": "getDialectProvider",
        "parameterTypes": []
      },
      {
        "name": "getDynamicEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getEntityClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getEqlAstTransformer",
        "parameterTypes": []
      },
      {
        "name": "getGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getJdbcTemplate",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrmModel",
        "parameterTypes": []
      },
      {
        "name": "getQueryExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getQueryExecutors",
        "parameterTypes": []
      },
      {
        "name": "getSequenceGenerator",
        "parameterTypes": []
      },
      {
        "name": "getShardSelector",
        "parameterTypes": []
      },
      {
        "name": "isRegisterGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "io.nop.orm.IOrmInterceptor"
        ]
      },
      {
        "name": "setBeanProvider",
        "parameterTypes": [
          "io.nop.api.core.ioc.IBeanProvider"
        ]
      },
      {
        "name": "setColumnBinderEnhancer",
        "parameterTypes": [
          "io.nop.orm.IOrmColumnBinderEnhancer"
        ]
      },
      {
        "name": "setColumnBinderEnhancer",
        "parameterTypes": [
          "io.nop.orm.eql.binder.IOrmColumnBinderEnhancer"
        ]
      },
      {
        "name": "setDefaultDynamicEntityClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultQueryExecutor",
        "parameterTypes": [
          "io.nop.orm.loader.IQueryExecutor"
        ]
      },
      {
        "name": "setDialectProvider",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialectProvider"
        ]
      },
      {
        "name": "setDynamicEntityNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEntityClassLoader",
        "parameterTypes": [
          "io.nop.commons.lang.IClassLoader"
        ]
      },
      {
        "name": "setEqlAstTransformer",
        "parameterTypes": [
          "io.nop.orm.eql.IEqlAstTransformer"
        ]
      },
      {
        "name": "setGlobalCache",
        "parameterTypes": [
          "io.nop.commons.cache.ICacheProvider"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrmModel",
        "parameterTypes": [
          "io.nop.orm.model.IOrmModel"
        ]
      },
      {
        "name": "setQueryExecutors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegisterGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSequenceGenerator",
        "parameterTypes": [
          "io.nop.dao.seq.ISequenceGenerator"
        ]
      },
      {
        "name": "setShardSelector",
        "parameterTypes": [
          "io.nop.dao.shard.IShardSelector"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.factory.SessionFactoryConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.factory.XplOrmInterceptorFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "assembleAllCollectionInMemory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "assembleCollectionInMemory",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "assembleSelectionInMemory",
        "parameterTypes": [
          "java.lang.Object",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "batchDelete",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "batchLoadProps",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Collection"
        ]
      },
      {
        "name": "batchLoadSelection",
        "parameterTypes": [
          "java.util.Collection",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "batchSaveOrUpdate",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "cacheGet",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cacheGet",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "cachePut",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "cacheRemove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "castId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "castIds",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "clearGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "clearGlobalCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearQueryPlanCache",
        "parameterTypes": []
      },
      {
        "name": "clearSession",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "currentSession",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "deleteDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "evict",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "evictAll",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "existsByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "findFirstByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dao.dataset.IRowMapper"
        ]
      },
      {
        "name": "findFirstByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "findListByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dao.dataset.IRowMapper"
        ]
      },
      {
        "name": "findListByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "flushSession",
        "parameterTypes": []
      },
      {
        "name": "forStateless",
        "parameterTypes": []
      },
      {
        "name": "forceLoad",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDbEstimatedClock",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getFullEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOrmModel",
        "parameterTypes": []
      },
      {
        "name": "getSessionFactory",
        "parameterTypes": []
      },
      {
        "name": "initEntityId",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "isValidEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "load",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "newEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "registerSession",
        "parameterTypes": [
          "io.nop.orm.IOrmSession"
        ]
      },
      {
        "name": "reloadModel",
        "parameterTypes": []
      },
      {
        "name": "requireSession",
        "parameterTypes": []
      },
      {
        "name": "runInNewSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInNewSessionAsync",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInSession",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "runInSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInSessionAsync",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "saveDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "saveOrUpdate",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "sessionCache",
        "parameterTypes": []
      },
      {
        "name": "setSessionFactory",
        "parameterTypes": [
          "io.nop.orm.IOrmSessionFactory"
        ]
      },
      {
        "name": "unregisterSession",
        "parameterTypes": []
      },
      {
        "name": "updateDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      }
    ],
    "name": "io.nop.orm.impl.OrmTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.initialize.OrmCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.orm.interceptor.SingleSessionMethodInterceptor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model.IEntityPropModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityRelationModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IOrmDataType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IPdmElement",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getSqlType",
        "parameterTypes": []
      },
      {
        "name": "getSqlType",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumnRefs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "setSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmDomainModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "containsTenantIdInPk",
        "parameterTypes": []
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getNopFlowIdPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "hasOneToOneRelation",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAllColumnPrimary",
        "parameterTypes": []
      },
      {
        "name": "setPkColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRevLatestKeyColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLeftPropModel",
        "parameterTypes": []
      },
      {
        "name": "getLeftType",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getRightPropModel",
        "parameterTypes": []
      },
      {
        "name": "getRightType",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "setLeftPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "setRightPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmJoinOnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModelByTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModels",
        "parameterTypes": []
      },
      {
        "name": "getEntityModelsInTopoOrder",
        "parameterTypes": []
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getTopoEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAnyEntityUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isMerged",
        "parameterTypes": []
      },
      {
        "name": "setMerged",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmRefSetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addJoinOn",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDynamicRelation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setPropValue",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "setRefEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setRefPropIds",
        "parameterTypes": [
          "[I"
        ]
      },
      {
        "name": "setSingleColumnJoin",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "setCollectionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToManyReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "setOneToOne",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToOneReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getFixedValue",
        "parameterTypes": []
      },
      {
        "name": "getJsonPath",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeSqlType",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getUiHint",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isLazy",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFixedValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJsonPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNativeSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUiHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.core.lang.sql.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmDomainModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.orm.model.OrmAliasModel"
        ]
      },
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "addComponent",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentModel"
        ]
      },
      {
        "name": "addCompute",
        "parameterTypes": [
          "io.nop.orm.model.OrmComputePropModel"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityFilterModel"
        ]
      },
      {
        "name": "addIndex",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexModel"
        ]
      },
      {
        "name": "addRelation",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "addUniqueKey",
        "parameterTypes": [
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getCreaterProp",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbPkName",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionProp",
        "parameterTypes": []
      },
      {
        "name": "getDimensionalType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "getIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getLabelProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getShardProp",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStateProp",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTenantProp",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterProp",
        "parameterTypes": []
      },
      {
        "name": "getVersionProp",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasColumns",
        "parameterTypes": []
      },
      {
        "name": "hasComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComponents",
        "parameterTypes": []
      },
      {
        "name": "hasCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComputes",
        "parameterTypes": []
      },
      {
        "name": "hasFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFilters",
        "parameterTypes": []
      },
      {
        "name": "hasIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIndexes",
        "parameterTypes": []
      },
      {
        "name": "hasRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRelations",
        "parameterTypes": []
      },
      {
        "name": "hasUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isTableView",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isUseWorkflow",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_columns",
        "parameterTypes": []
      },
      {
        "name": "keySet_components",
        "parameterTypes": []
      },
      {
        "name": "keySet_computes",
        "parameterTypes": []
      },
      {
        "name": "keySet_filters",
        "parameterTypes": []
      },
      {
        "name": "keySet_indexes",
        "parameterTypes": []
      },
      {
        "name": "keySet_relations",
        "parameterTypes": []
      },
      {
        "name": "keySet_uniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCheckVersionWhenLazyLoad",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComponents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComputes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCreateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbPkName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteFlagProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimensionalType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityModeEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIndexes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKvTable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShortName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setShardProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStateProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableView",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTenantProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueKeys",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUpdateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseRevision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseShard",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTenant",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseWorkflow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLeftProp",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": []
      },
      {
        "name": "getRightProp",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLeftProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeftValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRightProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRightValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmJoinOnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDict",
        "parameterTypes": [
          "io.nop.api.core.beans.DictBean"
        ]
      },
      {
        "name": "addDomain",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "addEntity",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "addPackage",
        "parameterTypes": [
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDicts",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDomains",
        "parameterTypes": []
      },
      {
        "name": "getEntities",
        "parameterTypes": []
      },
      {
        "name": "getEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackages",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "hasDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDicts",
        "parameterTypes": []
      },
      {
        "name": "hasDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDomains",
        "parameterTypes": []
      },
      {
        "name": "hasEntities",
        "parameterTypes": []
      },
      {
        "name": "hasEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackages",
        "parameterTypes": []
      },
      {
        "name": "keySet_dicts",
        "parameterTypes": []
      },
      {
        "name": "keySet_domains",
        "parameterTypes": []
      },
      {
        "name": "keySet_entities",
        "parameterTypes": []
      },
      {
        "name": "keySet_packages",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDicts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEntities",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPackages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmRefSetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isEmbedded",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isQueryable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutoCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbedded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJoin",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmToManyReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToManyReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmToOneReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConstraint",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setConstraint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "setReverseDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToOneReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.IResourceStore"
        ]
      },
      {
        "name": "register",
        "parameterTypes": []
      },
      {
        "name": "unregister",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.resource.DaoResourceNamespaceHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildSql",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkAllLibValid",
        "parameterTypes": []
      },
      {
        "name": "checkAuth",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlItemModel",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkLibValid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkProxyMethods",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createProxy",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "delayInit",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getSqlItemModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlItemModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.SqlLibManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkDictSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setSqlLibManager",
        "parameterTypes": [
          "io.nop.orm.sql_lib.ISqlLibManager"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.dict.SqlLibDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBigIntValue",
        "parameterTypes": []
      },
      {
        "name": "getBoolean",
        "parameterTypes": []
      },
      {
        "name": "getBooleanValue",
        "parameterTypes": []
      },
      {
        "name": "getByte",
        "parameterTypes": []
      },
      {
        "name": "getByteValue",
        "parameterTypes": []
      },
      {
        "name": "getChar",
        "parameterTypes": []
      },
      {
        "name": "getCharValue",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeValue",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDatetime",
        "parameterTypes": []
      },
      {
        "name": "getDecimal",
        "parameterTypes": []
      },
      {
        "name": "getDecimalScale",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getDouble",
        "parameterTypes": []
      },
      {
        "name": "getDoubleValue",
        "parameterTypes": []
      },
      {
        "name": "getFloat",
        "parameterTypes": []
      },
      {
        "name": "getFloatValue",
        "parameterTypes": []
      },
      {
        "name": "getInt",
        "parameterTypes": []
      },
      {
        "name": "getIntValue",
        "parameterTypes": []
      },
      {
        "name": "getLong",
        "parameterTypes": []
      },
      {
        "name": "getLongValue",
        "parameterTypes": []
      },
      {
        "name": "getNumberValue",
        "parameterTypes": []
      },
      {
        "name": "getShort",
        "parameterTypes": []
      },
      {
        "name": "getShortValue",
        "parameterTypes": []
      },
      {
        "name": "getString",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTypedValue",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBigIntValue",
        "parameterTypes": [
          "java.math.BigInteger"
        ]
      },
      {
        "name": "setBoolean",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBooleanValue",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setByte",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setByteValue",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setChar",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setCharValue",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDateTimeValue",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDatetime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDecimal",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDecimalScale",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDouble",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setDoubleValue",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFloat",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setFloatValue",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setInt",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIntValue",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLong",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLongValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNullValue",
        "parameterTypes": []
      },
      {
        "name": "setShort",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setShortValue",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUnknownTypedValue",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.support.AbstractOrmKeyValueTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "internalClearRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalGetAliasValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetRefEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetAliasValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "internalSetRefEntity",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "internalSetReverseRefEntity",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "internalSetValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "nopRevChildChangePropId",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_refEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "requireValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.DynamicOrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCompositeId",
        "parameterTypes": [
          "java.util.List",
          "[I"
        ]
      },
      {
        "name": "buildSimpleId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "checkPropIdRange",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "checkReadonly",
        "parameterTypes": []
      },
      {
        "name": "defaultGetProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "defaultSetProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "forcePropLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "get_t",
        "parameterTypes": []
      },
      {
        "name": "internalClearRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalNotifyPkWatcher",
        "parameterTypes": []
      },
      {
        "name": "make_t",
        "parameterTypes": []
      },
      {
        "name": "markPropAccessed",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "markPropDirty",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "newBitSet",
        "parameterTypes": []
      },
      {
        "name": "newEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "newOrmEntity",
        "parameterTypes": [
          "java.lang.Class",
          "boolean"
        ]
      },
      {
        "name": "newTypeConversionError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newValuesMap",
        "parameterTypes": []
      },
      {
        "name": "nopRevChildChangePropId",
        "parameterTypes": []
      },
      {
        "name": "onInitProp",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onPropGet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onPropSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_addPkWatcher",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "orm_attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntityEnhancer"
        ]
      },
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_computed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "orm_detach",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyNewValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyOldValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyPropIds",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_enhancer",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_flushComponent",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_forEachDirtyProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_forEachInitedProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_fullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_getBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_inited",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_locked",
        "parameterTypes": []
      },
      {
        "name": "orm_locked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_markFullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_propDirty",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propInited",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propOldValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": [
          "io.nop.orm.OrmEntityState"
        ]
      },
      {
        "name": "orm_tenantId",
        "parameterTypes": []
      },
      {
        "name": "orm_unload",
        "parameterTypes": []
      },
      {
        "name": "orm_useOldValues",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "requireEnhancer",
        "parameterTypes": []
      },
      {
        "name": "requireEntityModel",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.OrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "onAfterCompletion",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction",
          "io.nop.dao.txn.ITransactionListener$CompleteStatus",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "onBeforeCommit",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.txn.OrmTransactionListener",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.utils.SingleSessionFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "applyConfig",
        "parameterTypes": [
          "io.agroal.api.configuration.supplier.AgroalDataSourceConfigurationSupplier"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.nop.quarkus.core.dao.DataSourceConfig"
        ]
      }
    ],
    "name": "io.nop.quarkus.core.dao.AgroalDataSourceFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAcquisitionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getBackgroundValidationInterval",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getIdleRemovalInterval",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitialSize",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getMinSize",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationQuerySql",
        "parameterTypes": []
      },
      {
        "name": "isMetricsEnabled",
        "parameterTypes": []
      },
      {
        "name": "setAcquisitionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBackgroundValidationInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdleRemovalInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMinSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQuerySql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.quarkus.core.dao.DataSourceConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.rpc.model.proto.ProtoFileParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_COUNT"
      }
    ],
    "methods": [
      {
        "name": "addVariable",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.ICodeRuleVariable"
        ]
      },
      {
        "name": "generate",
        "parameterTypes": [
          "java.lang.String",
          "java.time.LocalDateTime",
          "java.util.function.LongSupplier",
          "java.lang.Object"
        ]
      },
      {
        "name": "generateFromProp",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.CodeRuleParams"
        ]
      },
      {
        "name": "generateRand",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.CodeRuleParams"
        ]
      },
      {
        "name": "generateSeq",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.CodeRuleParams"
        ]
      },
      {
        "name": "pad",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "removeVariable",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.ICodeRuleVariable"
        ]
      },
      {
        "name": "setVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.sys.dao.coderule.DefaultCodeRule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "generate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCodeRule",
        "parameterTypes": [
          "io.nop.dao.coderule.ICodeRule"
        ]
      },
      {
        "name": "setSequenceGenerator",
        "parameterTypes": [
          "io.nop.dao.seq.ISequenceGenerator"
        ]
      },
      {
        "name": "setSysCalendar",
        "parameterTypes": [
          "io.nop.api.core.time.ISysCalendar"
        ]
      }
    ],
    "name": "io.nop.sys.dao.coderule.SysCodeRuleGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.sys.dao.dict.SysDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysClusterLeader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysCodeRule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysDict",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysDictOption",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysExtField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysI18n",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysLock",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysMakerCheckerRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysNoticeTemplate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysSequence",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getNormalizedValue",
        "parameterTypes": []
      },
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysUserVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_clusterId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_electTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_leaderAdder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_leaderEpoch"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_leaderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_clusterId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_electTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_leaderAdder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_leaderEpoch"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_leaderId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAppId",
        "parameterTypes": []
      },
      {
        "name": "getClusterId",
        "parameterTypes": []
      },
      {
        "name": "getElectTime",
        "parameterTypes": []
      },
      {
        "name": "getExpireAt",
        "parameterTypes": []
      },
      {
        "name": "getLeaderAdder",
        "parameterTypes": []
      },
      {
        "name": "getLeaderEpoch",
        "parameterTypes": []
      },
      {
        "name": "getLeaderId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAppId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClusterId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setElectTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setExpireAt",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLeaderAdder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeaderEpoch",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLeaderId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysClusterLeader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_codePattern"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_codePattern"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCodePattern",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSeqName",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCodePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeqName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysCodeRule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dictName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictOptions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDictName",
        "parameterTypes": []
      },
      {
        "name": "getDictOptions",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDictName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysDict",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_codeValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dictId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_groupName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isDeprecated"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isInternal"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_label"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_codeValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dict"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_groupName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isDeprecated"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isInternal"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_label"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCodeValue",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getDictId",
        "parameterTypes": []
      },
      {
        "name": "getGroupName",
        "parameterTypes": []
      },
      {
        "name": "getIsDeprecated",
        "parameterTypes": []
      },
      {
        "name": "getIsInternal",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCodeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDict",
        "parameterTypes": [
          "io.nop.sys.dao.entity.NopSysDict"
        ]
      },
      {
        "name": "setDictId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsDeprecated",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsInternal",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysDictOption",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_decimalScale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_decimalScale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDecimalScale",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getEntityId",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDecimalScale",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setEntityId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysExtField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_i18nKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_i18nLocale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_i18nKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_i18nLocale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getI18nKey",
        "parameterTypes": []
      },
      {
        "name": "getI18nLocale",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setI18nKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setI18nLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysI18n",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_holderAdder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_holderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lockGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lockName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lockReason"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lockTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_holderAdder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_holderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lockGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lockName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lockReason"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lockTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAppId",
        "parameterTypes": []
      },
      {
        "name": "getExpireAt",
        "parameterTypes": []
      },
      {
        "name": "getHolderAdder",
        "parameterTypes": []
      },
      {
        "name": "getHolderId",
        "parameterTypes": []
      },
      {
        "name": "getLockGroup",
        "parameterTypes": []
      },
      {
        "name": "getLockName",
        "parameterTypes": []
      },
      {
        "name": "getLockReason",
        "parameterTypes": []
      },
      {
        "name": "getLockTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAppId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpireAt",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setHolderAdder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHolderId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysLock",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cancelAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cbErrCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ceErrMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_inputPage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_makerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_makerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestData"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tryResult"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cancelAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cbErrCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ceErrMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_inputPage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_makerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_makerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestData"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tryResult"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizObjId",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCancelAction",
        "parameterTypes": []
      },
      {
        "name": "getCbErrCode",
        "parameterTypes": []
      },
      {
        "name": "getCeErrMsg",
        "parameterTypes": []
      },
      {
        "name": "getCheckTime",
        "parameterTypes": []
      },
      {
        "name": "getCheckerId",
        "parameterTypes": []
      },
      {
        "name": "getCheckerName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getInputPage",
        "parameterTypes": []
      },
      {
        "name": "getMakerId",
        "parameterTypes": []
      },
      {
        "name": "getMakerName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRequestAction",
        "parameterTypes": []
      },
      {
        "name": "getRequestData",
        "parameterTypes": []
      },
      {
        "name": "getRequestTime",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTryResult",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizObjId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCancelAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCbErrCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCeErrMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCheckerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInputPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMakerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMakerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTryResult",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysMakerCheckerRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tplType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extFields"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tplType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getExtFields",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getTplType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTplType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysNoticeTemplate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cacheSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isUuid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_maxValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nextValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resetType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cacheSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isUuid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_maxValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nextValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resetType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCacheSize",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getIsUuid",
        "parameterTypes": []
      },
      {
        "name": "getMaxValue",
        "parameterTypes": []
      },
      {
        "name": "getNextValue",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResetType",
        "parameterTypes": []
      },
      {
        "name": "getSeqName",
        "parameterTypes": []
      },
      {
        "name": "getSeqType",
        "parameterTypes": []
      },
      {
        "name": "getStepSize",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCacheSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsUuid",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setMaxValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNextValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResetType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSeqName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeqType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStepSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysSequence",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "getVarType",
        "parameterTypes": []
      },
      {
        "name": "getVarValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysUserVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "getVarType",
        "parameterTypes": []
      },
      {
        "name": "getVarValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.i18n.SysI18nMessageLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addDefaultSequence",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "findSeqItem",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findSeqItem",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "generateLong",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "generateString",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "lazyInit",
        "parameterTypes": []
      },
      {
        "name": "loadCacheItemFromDb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runLocal",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      },
      {
        "name": "setSnowflakeWorkerId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "syncFromDb",
        "parameterTypes": [
          "io.nop.sys.dao.seq.SysSequenceGenerator$SeqItem"
        ]
      }
    ],
    "name": "io.nop.sys.dao.seq.SysSequenceGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysClusterLeaderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysCodeRuleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysDictBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysDictOptionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysExtFieldBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysI18nBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysLockBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysMakerCheckerRecordBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysNoticeTemplateBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysSequenceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getVar",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.sys.service.entity.NopSysUserVariableBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysVariableBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "editEnabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "pageProvider"
      }
    ],
    "methods": [
      {
        "name": "getPage",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "rollbackPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "savePageSource",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.web.biz.PageProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "editEnabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "jsProvider"
      }
    ],
    "methods": [
      {
        "name": "getJs",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "rollbackJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveJsSource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.web.biz.SystemJsProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDynamicCss",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadText",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.web.page.DynamicCssLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDynamicJs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSystemJsTransformer",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionService"
        ]
      },
      {
        "name": "systemJsEmptyFile",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.DynamicJsLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "cssLoader"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "jsLoader"
      }
    ],
    "methods": [
      {
        "name": "getJs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadAllXcss",
        "parameterTypes": []
      },
      {
        "name": "loadAllXjs",
        "parameterTypes": []
      },
      {
        "name": "saveJsSource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.web.page.DynamicWebFileProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "apply",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "generateFromXjs",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.ModuleJsLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cleanupJson",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getPage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getPageDelta",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "getPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueResolverCompilerRegistry",
        "parameterTypes": []
      },
      {
        "name": "hasXuiAuth",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "parseViewModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerXPage",
        "parameterTypes": []
      },
      {
        "name": "registerXView",
        "parameterTypes": []
      },
      {
        "name": "savePageSource",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setRolePermissionMapping",
        "parameterTypes": [
          "io.nop.api.core.auth.IRolePermissionMapping"
        ]
      },
      {
        "name": "transformPermissions",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateAllPages",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.PageProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "rollback",
        "parameterTypes": [
          "java.lang.String",
          "java.security.Timestamp"
        ]
      },
      {
        "name": "setResourceHistory",
        "parameterTypes": [
          "io.nop.core.resource.IResourceHistory"
        ]
      },
      {
        "name": "setResourceLockManager",
        "parameterTypes": [
          "io.nop.commons.concurrent.lock.IResourceLockManager"
        ]
      },
      {
        "name": "withHistorySupport",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.function.Function"
        ]
      }
    ],
    "name": "io.nop.web.page.ResourceWithHistoryProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "dumpResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "emptyFile",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "getJs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "registerJs",
        "parameterTypes": []
      },
      {
        "name": "saveJsSource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setJsFunctionService",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionService"
        ]
      }
    ],
    "name": "io.nop.web.page.SystemJsProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "html"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "node"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "none"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "sql"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "text"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "textMap"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xjson"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xml"
      }
    ],
    "methods": [
      {
        "name": "fromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowTextOut",
        "parameterTypes": []
      },
      {
        "name": "isXmlOrHtml",
        "parameterTypes": []
      },
      {
        "name": "requireFromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.XLangOutputMode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.debugger.initialize.XLangDebuggerInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "AND",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "IF",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "OR",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "SWITCH",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "assign",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "currentDateTime",
        "parameterTypes": []
      },
      {
        "name": "eval",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalAction",
          "java.util.Map"
        ]
      },
      {
        "name": "eval_node",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "functional",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "g_current_locale",
        "parameterTypes": []
      },
      {
        "name": "g_default_locale",
        "parameterTypes": []
      },
      {
        "name": "g_make_node",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getByPropPath",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "inject",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.Object"
        ]
      },
      {
        "name": "jpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "location",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "masked",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "optional",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "order_by",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "raw",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selection",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "sql",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval2",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "today",
        "parameterTypes": []
      },
      {
        "name": "tpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "track",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.GlobalFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "logDebug",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logInfo",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logTrace",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logWarn",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.LogFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.RegisterModelCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangDebuggerInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "reparse",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "v",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.xlang.utils.DebugHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.AbstractDslModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.IXDslModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IListSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IMapSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isInterface",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.IObjSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRefResolved",
        "parameterTypes": []
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchemaNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISimpleSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IUnionSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xmeta.impl.ObjConditionExpr",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getDefinedObjSchemas",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getRootSchema",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "transform",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjMetaToXDef",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NULL_AUTH"
      }
    ],
    "methods": [
      {
        "name": "getChildName",
        "parameterTypes": []
      },
      {
        "name": "getDeleteAuth",
        "parameterTypes": []
      },
      {
        "name": "getReadAuth",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getWriteAuth",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjPropMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjSchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getInterface",
        "parameterTypes": []
      },
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeMax",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExcludeMin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExplicitDefine",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExtendsType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setImplementsTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItemSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapValueSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMaxItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMinItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMultipleOf",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOneOf",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSubTypeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportExtends",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setUnknownTagSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaNodeImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjConditionExpr"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjConditionExpr",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDefine",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "addKey",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjKeyModel"
        ]
      },
      {
        "name": "addSelection",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjSelectionMeta"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjMetaImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCheckNs",
        "parameterTypes": []
      },
      {
        "name": "getDefaultExtends",
        "parameterTypes": []
      },
      {
        "name": "getDefine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefines",
        "parameterTypes": []
      },
      {
        "name": "getDisplayProp",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeys",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getParseForHtml",
        "parameterTypes": []
      },
      {
        "name": "getParseKeepComment",
        "parameterTypes": []
      },
      {
        "name": "getParserClass",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getPropNs",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSelections",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTree",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getXmlName",
        "parameterTypes": []
      },
      {
        "name": "hasDefine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDefines",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasKeys",
        "parameterTypes": []
      },
      {
        "name": "hasOrderBy",
        "parameterTypes": []
      },
      {
        "name": "hasSelection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSelections",
        "parameterTypes": []
      },
      {
        "name": "keySet_defines",
        "parameterTypes": []
      },
      {
        "name": "keySet_keys",
        "parameterTypes": []
      },
      {
        "name": "keySet_orderBy",
        "parameterTypes": []
      },
      {
        "name": "keySet_selections",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCheckNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultExtends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefines",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setKeys",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setParseForHtml",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParseKeepComment",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParserClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrimaryKey",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPropNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSelections",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTree",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjTreeModel"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropArgModel"
        ]
      },
      {
        "name": "addAuth",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropAuthModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropMetaImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllowCpExpr",
        "parameterTypes": []
      },
      {
        "name": "getAllowFilterOp",
        "parameterTypes": []
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuths",
        "parameterTypes": []
      },
      {
        "name": "getAutoExpr",
        "parameterTypes": []
      },
      {
        "name": "getChildName",
        "parameterTypes": []
      },
      {
        "name": "getChildXmlName",
        "parameterTypes": []
      },
      {
        "name": "getDefaultOverride",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getGetter",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMapTo",
        "parameterTypes": []
      },
      {
        "name": "getMapToProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSetter",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTransformIn",
        "parameterTypes": []
      },
      {
        "name": "getTransformOut",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getXmlName",
        "parameterTypes": []
      },
      {
        "name": "getXmlPos",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAuths",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isLazy",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPublished",
        "parameterTypes": []
      },
      {
        "name": "isQueryable",
        "parameterTypes": []
      },
      {
        "name": "isReadable",
        "parameterTypes": []
      },
      {
        "name": "isSortable",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      },
      {
        "name": "isVirtual",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_auths",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllowCpExpr",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowFilterOp",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "io.nop.api.core.auth.ActionAuthMeta"
        ]
      },
      {
        "name": "setAuths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAutoExpr",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjConditionExpr"
        ]
      },
      {
        "name": "setChildName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChildXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultOverride",
        "parameterTypes": [
          "io.nop.xlang.xdef.XDefOverride"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGetter",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setInsertable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ObjPropKind"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapToProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObjMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPublished",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setQueryable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setSetter",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setSortable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTransformIn",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setTransformOut",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setUpdatable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVirtual",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXmlPos",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNodeValuePosition"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjPropMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropMetaImpl"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjSchemaImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getInterface",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "keySet_props",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExtendsType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setImplementsTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportExtends",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setUnknownTagSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjSchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.SchemaNodeImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefResolved",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._SchemaNodeImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "baseLoc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "packageName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "typeAliases"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "typeCache"
      }
    ],
    "methods": [
      {
        "name": "addTypeAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "buildClassType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "java.lang.String"
        ]
      },
      {
        "name": "buildLoc",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable"
        ]
      },
      {
        "name": "buildReferenceType",
        "parameterTypes": [
          "org.codehaus.janino.Java$ReferenceType"
        ]
      },
      {
        "name": "buildType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Type"
        ]
      },
      {
        "name": "buildTypes",
        "parameterTypes": [
          "[Lorg.codehaus.janino.Java$Type;"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotation",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotatable",
          "java.lang.String"
        ]
      },
      {
        "name": "parseAnnotationValue",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotation",
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "resolveAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Located",
          "java.lang.String"
        ]
      },
      {
        "name": "setRawTypeResolver",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JaninoParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildTypeReference",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "resolveRef",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JavaObjMetaParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.impl.XplTaskLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.HtmlXplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.NoneXplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.loader.XplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFunctionModel",
        "parameterTypes": []
      },
      {
        "name": "getTagCompiler",
        "parameterTypes": []
      },
      {
        "name": "getTagFuncName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setTagCompiler",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplLibTagCompiler"
        ]
      },
      {
        "name": "setTagFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTag",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultNamespace",
        "parameterTypes": []
      },
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setDefaultNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagLib",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSlotFuncName",
        "parameterTypes": []
      },
      {
        "name": "setSlotFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlot",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlotArg",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "addSlot",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTag"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getBodyType",
        "parameterTypes": []
      },
      {
        "name": "getCallLocationVar",
        "parameterTypes": []
      },
      {
        "name": "getCheckNs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExample",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSlots",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagReturn",
        "parameterTypes": []
      },
      {
        "name": "getTransformer",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "hasSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSlots",
        "parameterTypes": []
      },
      {
        "name": "isConditionTag",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isDump",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreUnknownAttrs",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "keySet_slots",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBodyType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setCallLocationVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setConditionTag",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDump",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExample",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setIgnoreUnknownAttrs",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagReturn",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagReturn"
        ]
      },
      {
        "name": "setTransformer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTag",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOptional",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagLib"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "hasTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasTags",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagLib",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlotType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isMultiple",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlotType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlot",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlotArg",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.io.Serializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "booleanValue",
        "parameterTypes": []
      },
      {
        "name": "compare",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "logicalAnd",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalOr",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalXor",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "parseBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Boolean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "java.lang.Comparable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Enum"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "ordinal",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Enum",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Iterable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CASE_INSENSITIVE_ORDER"
      }
    ],
    "methods": [
      {
        "name": "charAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "chars",
        "parameterTypes": []
      },
      {
        "name": "codePointAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointBefore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointCount",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "codePoints",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "compareToIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.StringBuffer"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "endsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equalsIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.util.Locale",
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "formatted",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": []
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "int",
          "int",
          "[B",
          "int"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getChars",
        "parameterTypes": [
          "int",
          "int",
          "[C",
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "intern",
        "parameterTypes": []
      },
      {
        "name": "isBlank",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[Ljava.lang.CharSequence;"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "lines",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "offsetByCodePoints",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "boolean",
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "repeat",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "char",
          "char"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFirst",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveConstantDesc",
        "parameterTypes": [
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "strip",
        "parameterTypes": []
      },
      {
        "name": "stripIndent",
        "parameterTypes": []
      },
      {
        "name": "stripLeading",
        "parameterTypes": []
      },
      {
        "name": "stripTrailing",
        "parameterTypes": []
      },
      {
        "name": "subSequence",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toCharArray",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "translateEscapes",
        "parameterTypes": []
      },
      {
        "name": "trim",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "java.lang.String",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "describeConstable",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.constant.Constable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractCollection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "java.util.AbstractList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "java.util.AbstractSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ensureCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeIf",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.UnaryOperator"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "trimToSize",
        "parameterTypes": []
      }
    ],
    "name": "java.util.ArrayList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Collection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.HashSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.List",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "entry",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "ofEntries",
        "parameterTypes": [
          "[Ljava.util.Map$Entry;"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.Map",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Set",
    "unsafeAllocated": false
  }
]