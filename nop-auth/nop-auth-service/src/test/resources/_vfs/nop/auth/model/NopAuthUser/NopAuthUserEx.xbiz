<?xml version="1.0" encoding="UTF-8" ?>
<biz x:schema="/nop/schema/biz/xbiz.xdef" xmlns:x="/nop/schema/xdsl.xdef"
     graphql:base="crud" xmlns:graphql="graphql"
     x:extends="_NopAuthUser.xbiz" xmlns:bo="bo" xmlns:c="c">

    <actions>
        <query name="active_findPage2" x:prototype="findPage">

            <source>
                <c:import class="io.nop.auth.api.AuthApiConstants" />

                <bo:DoFindPage query="${query}" selection="${selection}" xpl:lib="/nop/biz/xlib/bo.xlib">
                    <filter>
                        <eq name="status" value="${AuthApiConstants.USER_STATUS_ACTIVE}" />
                    </filter>
                </bo:DoFindPage>
            </source>
        </query>

        <query name="test">
            <return type="io.nop.auth.dao.entity.NopAuthUser" />
            <source>
                return null;
            </source>
        </query>

        <query name="initData">
            <arg name="svcCtx" kind="ServiceContext" />

            <return graphql:type="NopAuthUser" />

            <source>
                const daoProvider = inject('nopDaoProvider');
                const dao = daoProvider.dao('NopAuthUser');
                const mappingDao = daoProvider.dao('NopAuthUserRole');

                const entity = dao.newEntity();
                entity.userId = '3';
                entity.userName = 'test';
                const mapping = mappingDao.newEntity();
                mapping.setRoleId('admin');
                entity.roleMappings.add(mapping);
                return entity;
            </source>
        </query>
    </actions>
</biz>