<?xml version="1.0" encoding="UTF-8" ?>
<meta x:schema="/nop/schema/xmeta.xdef" xmlns:x="/nop/schema/xdsl.xdef" xmlns:i18n-en="i18n-en" xmlns:ext="ext"
      xmlns:xpl="xpl" ext:model="orm" xmlns:c="c" xmlns:graphql="graphql" xmlns:meta-gen="meta-gen" xmlns:biz="biz"
      displayName="用户组" i18n-en:displayName="User Group" xmlns:ui="ui" xmlns:orm="orm">

    <entityName>io.nop.auth.dao.entity.NopAuthGroup</entityName>

    <primaryKey>groupId</primaryKey>

    <displayProp>name</displayProp>

    <x:gen-extends>
        <meta-gen:DefaultMetaGenExtends xpl:lib="/nop/core/xlib/meta-gen.xlib"/>
    </x:gen-extends>

    <x:post-extends>
        <meta-gen:DefaultMetaPostExtends xpl:lib="/nop/core/xlib/meta-gen.xlib"/>
    </x:post-extends>

    <keys/>

    <tree parentProp="parentId" childrenProp="children"/>

    <props>
        <prop name="groupId" displayName="主键" propId="1" i18n-en:displayName="Group ID" tagSet="seq" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="false" internal="true" ui:show="X">
            <schema type="java.lang.String" precision="50"/>
        </prop>
        <prop name="name" displayName="名称" propId="2" i18n-en:displayName="Name" tagSet="disp" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.String" precision="100"/>
        </prop>
        <prop name="parentId" displayName="父ID" propId="3" i18n-en:displayName="Parent ID" tagSet="parent"
              queryable="true" sortable="true" insertable="true" updatable="true" ui:control="tree-parent"
              ext:relation="parent">
            <schema type="java.lang.String" precision="50"/>
        </prop>
        <prop name="ownerId" displayName="所有者ID" propId="4" i18n-en:displayName="Owner ID" queryable="true"
              sortable="true" insertable="true" updatable="true" ext:relation="owner">
            <schema type="java.lang.String" precision="50"/>
        </prop>
        <prop name="delFlag" displayName="删除标识" propId="5" i18n-en:displayName="Deleted" queryable="true"
              sortable="true" insertable="false" updatable="true" internal="true" ui:show="X">
            <schema stdDomain="boolFlag" domain="delFlag" type="java.lang.Byte"/>
        </prop>
        <prop name="version" displayName="数据版本" propId="6" i18n-en:displayName="Version" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" internal="true" ui:show="X">
            <schema domain="version" type="java.lang.Integer"/>
        </prop>
        <prop name="createdBy" displayName="创建人" propId="7" i18n-en:displayName="Created By" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="Y">
            <schema domain="createdBy" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="createTime" displayName="创建时间" propId="8" i18n-en:displayName="Create Time" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="L">
            <schema domain="createTime" type="java.sql.Timestamp"/>
        </prop>
        <prop name="updatedBy" displayName="修改人" propId="9" i18n-en:displayName="Updated By" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="L">
            <schema domain="updatedBy" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="updateTime" displayName="修改时间" propId="10" i18n-en:displayName="Update Time" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="L">
            <schema domain="updateTime" type="java.sql.Timestamp"/>
        </prop>
        <prop name="remark" displayName="备注" propId="11" i18n-en:displayName="Remark" queryable="true" sortable="true"
              insertable="true" updatable="true" ui:show="S">
            <schema domain="remark" type="java.lang.String" precision="200"/>
        </prop>
        <prop name="parent" displayName="父分组" i18n-en:displayName="Parent" tagSet="pub,ref-pub" ext:kind="to-one"
              internal="true" queryable="true" ext:joinLeftProp="parentId" ext:joinRightProp="groupId"
              ext:joinRightDisplayProp="name" insertable="false" updatable="false" lazy="true">
            <schema bizObjName="NopAuthGroup"/>
        </prop>
        <prop name="parent.name" displayName="父分组" i18n-en:displayName="Parent" internal="true" queryable="true"
              sortable="true" lazy="true">
            <schema type="String"/>
        </prop>
        <prop name="owner" displayName="所有者" i18n-en:displayName="Owner"
              tagSet="pub,ref-pub,ref-cascade-delete,ref-insertable,ref-updatable" ext:kind="to-one" internal="true"
              queryable="true" ext:joinLeftProp="ownerId" ext:joinRightProp="userId" ext:joinRightDisplayProp="userName"
              insertable="false" updatable="false" lazy="true">
            <schema bizObjName="NopAuthUser"/>
        </prop>
        <prop name="owner.userName" displayName="所有者" i18n-en:displayName="Owner" internal="true" queryable="true"
              sortable="true" lazy="true">
            <schema type="String"/>
        </prop>
        <prop name="children" displayName="子分组" i18n-en:displayName="Children" tagSet="pub" ext:kind="to-many"
              internal="true" ext:joinLeftProp="groupId" ext:joinRightProp="parentId" ext:joinRightDisplayProp="name"
              insertable="false" updatable="false" lazy="true">
            <schema>
                <item bizObjName="NopAuthGroup"/>
            </schema>
        </prop>
        <prop name="deptMappings" displayName="部门映射" i18n-en:displayName="Department Mappings"
              tagSet="pub,cascade-delete,insertable,updatable" ext:kind="to-many" internal="true"
              ext:joinLeftProp="groupId" ext:joinRightProp="groupId" orm:manyToManyRefProp="deptId" insertable="true"
              updatable="true" lazy="true">
            <schema>
                <item bizObjName="NopAuthGroupDept"/>
            </schema>
        </prop>
        <prop name="userMappings" displayName="用户映射" i18n-en:displayName="UserMappings"
              tagSet="pub,cascade-delete,insertable,updatable" ext:kind="to-many" internal="true"
              ext:joinLeftProp="groupId" ext:joinRightProp="groupId" orm:manyToManyRefProp="userId" insertable="true"
              updatable="true" lazy="true">
            <schema>
                <item bizObjName="NopAuthGroupUser"/>
            </schema>
        </prop>
        <prop name="relatedDeptList" displayName="relatedDeptList" insertable="true" updatable="true"
              depends="~deptMappings" internal="true" lazy="true">
            <schema>
                <item bizObjName="NopAuthDept"/>
            </schema>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefProps(
                                entity.getDeptMappings(), "dept");
                        </getter>
        </prop>
        <prop name="relatedDeptList_ids" displayName="relatedDeptList" insertable="true" updatable="true"
              graphql:labelProp="relatedDeptList_label" lazy="true" internal="true" depends="~deptMappings">
            <schema type="List&lt;String&gt;"/>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefIds(
                                entity.getDeptMappings(), "dept");
                        </getter>
            <setter>
                            import io.nop.orm.support.OrmEntityHelper;
                            OrmEntityHelper.setRefIds(
                                entity.getDeptMappings(), "dept",value);
                        </setter>
        </prop>
        <prop name="relatedDeptList_label" displayName="relatedDeptList" internal="true" depends="~deptMappings"
              lazy="true">
            <schema type="String"/>
            <getter>
                    import io.nop.orm.support.OrmEntityHelper;
                    return OrmEntityHelper.getLabelForRefProps(
                        entity.getDeptMappings(), "dept");
                </getter>
        </prop>
        <prop name="relatedUserList" displayName="relatedUserList" insertable="true" updatable="true"
              depends="~userMappings" internal="true" lazy="true">
            <schema>
                <item bizObjName="NopAuthUser"/>
            </schema>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefProps(
                                entity.getUserMappings(), "user");
                        </getter>
        </prop>
        <prop name="relatedUserList_ids" displayName="relatedUserList" insertable="true" updatable="true"
              graphql:labelProp="relatedUserList_label" lazy="true" internal="true" depends="~userMappings">
            <schema type="List&lt;String&gt;"/>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefIds(
                                entity.getUserMappings(), "user");
                        </getter>
            <setter>
                            import io.nop.orm.support.OrmEntityHelper;
                            OrmEntityHelper.setRefIds(
                                entity.getUserMappings(), "user",value);
                        </setter>
        </prop>
        <prop name="relatedUserList_label" displayName="relatedUserList" internal="true" depends="~userMappings"
              lazy="true">
            <schema type="String"/>
            <getter>
                    import io.nop.orm.support.OrmEntityHelper;
                    return OrmEntityHelper.getLabelForRefProps(
                        entity.getUserMappings(), "user");
                </getter>
        </prop>
    </props>
</meta>