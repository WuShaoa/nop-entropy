<?xml version="1.0" encoding="UTF-8" ?>
<meta x:schema="/nop/schema/xmeta.xdef" xmlns:x="/nop/schema/xdsl.xdef" xmlns:i18n-en="i18n-en" xmlns:ext="ext"
      xmlns:xpl="xpl" ext:model="orm" xmlns:c="c" xmlns:graphql="graphql" xmlns:meta-gen="meta-gen" xmlns:biz="biz"
      displayName="应用定义" i18n-en:displayName="App Definition" xmlns:ui="ui" xmlns:orm="orm">

    <entityName>io.nop.dyn.dao.entity.NopDynApp</entityName>

    <primaryKey>appId</primaryKey>

    <displayProp>displayName</displayProp>

    <x:gen-extends>
        <meta-gen:DefaultMetaGenExtends xpl:lib="/nop/core/xlib/meta-gen.xlib"/>
    </x:gen-extends>

    <x:post-extends>
        <meta-gen:DefaultMetaPostExtends xpl:lib="/nop/core/xlib/meta-gen.xlib"/>
    </x:post-extends>

    <keys/>

    <props>
        <prop name="appId" displayName="应用ID" propId="1" i18n-en:displayName="App ID" tagSet="seq" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="false" internal="true" ui:show="X">
            <schema type="java.lang.String" precision="32"/>
        </prop>
        <prop name="appName" displayName="应用名" propId="2" i18n-en:displayName="App Name" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.String" precision="200"/>
        </prop>
        <prop name="displayName" displayName="显示名" propId="3" i18n-en:displayName="Display Name" tagSet="disp"
              mandatory="true" queryable="true" sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.String" precision="200"/>
        </prop>
        <prop name="appVersion" displayName="应用版本" propId="4" i18n-en:displayName="App Version" mandatory="true"
              queryable="true" sortable="true" insertable="true" updatable="true" defaultValue="1">
            <schema type="java.lang.Integer"/>
        </prop>
        <prop name="sortOrder" displayName="排序" propId="5" i18n-en:displayName="Sort Order" queryable="true"
              sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.Integer"/>
        </prop>
        <prop name="status" displayName="状态" propId="6" i18n-en:displayName="Status" mandatory="true" queryable="true"
              sortable="true" insertable="true" updatable="true">
            <schema type="java.lang.Integer" dict="dyn/app-status"/>
        </prop>
        <prop name="version" displayName="数据版本" propId="7" i18n-en:displayName="Version" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" internal="true" ui:show="X">
            <schema domain="version" type="java.lang.Integer"/>
        </prop>
        <prop name="createdBy" displayName="创建人" propId="8" i18n-en:displayName="Created By" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="R">
            <schema domain="createdBy" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="createTime" displayName="创建时间" propId="9" i18n-en:displayName="Create Time" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="R">
            <schema domain="createTime" type="java.sql.Timestamp"/>
        </prop>
        <prop name="updatedBy" displayName="修改人" propId="10" i18n-en:displayName="Updated By" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="R">
            <schema domain="updatedBy" type="java.lang.String" precision="50"/>
        </prop>
        <prop name="updateTime" displayName="修改时间" propId="11" i18n-en:displayName="Update Time" mandatory="true"
              queryable="true" sortable="true" insertable="false" updatable="false" ui:show="R">
            <schema domain="updateTime" type="java.sql.Timestamp"/>
        </prop>
        <prop name="patchFiles" displayName="补丁文件" i18n-en:displayName="Patch Files" tagSet="pub,cascade-delete"
              ext:kind="to-many" internal="true" ext:joinLeftProp="appId" ext:joinRightProp="appId"
              ext:joinRightDisplayProp="fileName" insertable="false" updatable="false" lazy="true">
            <schema>
                <item bizObjName="NopDynPatchFile"/>
            </schema>
        </prop>
        <prop name="moduleMappings" tagSet="pub,cascade-delete" ext:kind="to-many" internal="true"
              ext:joinLeftProp="appId" ext:joinRightProp="appId" orm:manyToManyRefProp="moduleId" insertable="false"
              updatable="false" lazy="true">
            <schema>
                <item bizObjName="NopDynAppModule"/>
            </schema>
        </prop>
        <prop name="relatedModuleList" displayName="relatedModuleList" insertable="false" updatable="false"
              depends="~moduleMappings" internal="true" lazy="true">
            <schema>
                <item bizObjName="NopDynModule"/>
            </schema>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefProps(
                                entity.getModuleMappings(), "module");
                        </getter>
        </prop>
        <prop name="relatedModuleList_ids" displayName="relatedModuleList" insertable="false" updatable="false"
              graphql:labelProp="relatedModuleList_label" lazy="true" internal="true" depends="~moduleMappings">
            <schema type="List&lt;String&gt;"/>
            <getter>
                            import io.nop.orm.support.OrmEntityHelper;
                            return OrmEntityHelper.getRefIds(
                                entity.getModuleMappings(), "module");
                        </getter>
            <setter>
                            import io.nop.orm.support.OrmEntityHelper;
                            OrmEntityHelper.setRefIds(
                                entity.getModuleMappings(), "module",value);
                        </setter>
        </prop>
        <prop name="relatedModuleList_label" displayName="relatedModuleList" internal="true" depends="~moduleMappings"
              lazy="true">
            <schema type="String"/>
            <getter>
                    import io.nop.orm.support.OrmEntityHelper;
                    return OrmEntityHelper.getLabelForRefProps(
                        entity.getModuleMappings(), "module");
                </getter>
        </prop>
    </props>
</meta>