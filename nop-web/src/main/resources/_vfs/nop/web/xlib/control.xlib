<?xml version="1.0" encoding="UTF-8" ?>

<!--
控件名格式为 {mode}-{type}
-->
<lib x:schema="/nop/schema/xlib.xdef" xmlns:x="/nop/schema/xdsl.xdef">
    <tags>

        <edit-tree-parent outputMode="xjson">
            <description>选择树形结构的父节点。要求meta文件中配置tree相关的属性</description>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>
            <attr name="objMeta" mandatory="true"/>
            <attr name="bizObjName" mandatory="true"/>

            <source>
                <c:script><![CDATA[
                    function filter_cond(){
                        if(objMeta.tree.levelProp and objMeta.tree.rootLevelValue != null)
                            return 'filter_' + objMeta.tree.levelProp + '=' + (objMeta.tree.rootLevelValue );
                        return 'filter_' + objMeta.tree.parentProp + '=__null';
                    }
                ]]></c:script>
                <!--
                支持五级菜单
                -->
                <tree-select clearable="@:true">
                    <source>
                        <!--
                        Amis并不允许url中包含空格和回车。Nop平台为了简化代码编写，在后台通过WebPageHelper.fixPage函数进行了规范化处理
                        -->
                        <url>@query:${bizObjName}__findList/value:id,label:${objMeta.displayProp || 'id'},
                            ${objMeta.tree.childrenProp} @TreeChildren(max:5)?${filter_cond()}
                        </url>
                    </source>
                </tree-select>
            </source>
        </edit-tree-parent>

        <edit-double>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'native-number',
                    value: editMode == 'add' ? (propMeta?.stdDataType?.convert(dispMeta?.defaultValue) ?? propMeta?.defaultValue) :null
                }
            ]]></source>
        </edit-double>

        <edit-decimal>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-number',
                    value: editMode == 'add' ? (propMeta?.stdDataType?.convert(dispMeta?.defaultValue) ?? propMeta?.defaultValue) :null,
                    precision: propMeta?.schema.scale ?? 5
                }
            ]]></source>
        </edit-decimal>

        <edit-short>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    validations: "isInt",
                    value: editMode == 'add' ? (propMeta?.stdDataType?.convert(dispMeta?.defaultValue) ?? propMeta?.defaultValue):null
                }
            ]]></source>
        </edit-short>

        <edit-byte>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    validations: "isInt",
                    value: editMode == 'add' ? (propMeta?.stdDataType?.convert(dispMeta?.defaultValue) ?? propMeta?.defaultValue):null
                }
            ]]></source>
        </edit-byte>

        <edit-int>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    validations: "isInt",
                    value: editMode == 'add' ? dispMeta?.defaultValue:null
                }
            ]]></source>
        </edit-int>

        <edit-long>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    validations: "isInt",
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue:null
                }
            ]]></source>
        </edit-long>

        <edit-email>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true,
                    validations: {
                        isEmail:true,
                        maxLength: dispMeta?.maxLength ?? propMeta?.schema?.precision,
                        minLength: dispMeta?.minLength,
                        matchRegexp: dispMeta?.matchRegexp,
                    },
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue: null,
                    transform: {
                        upperCase: dispMeta?.charCase == 'upper'? true:null,
                        lowerCase: dispMeta?.charCase == 'lower'? true:null
                    }
                }
            ]]></source>
        </edit-email>

        <edit-url>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true,
                    validations: {
                        isUrl: true,
                        maxLength: dispMeta?.maxLength ?? propMeta?.schema?.precision,
                        minLength: dispMeta?.minLength,
                        matchRegexp: dispMeta?.matchRegexp,
                    },
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null,
                    transform: {
                        upperCase: dispMeta?.charCase == 'upper'? true:null,
                        lowerCase: dispMeta?.charCase == 'lower'? true:null
                    }
                }
            ]]></source>
        </edit-url>

        <edit-ascii>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true,
                    validations: {
                        isAlpha: true,
                        maxLength: dispMeta?.maxLength ?? propMeta?.schema?.precision,
                        minLength: dispMeta?.minLength,
                        matchRegexp: dispMeta.matchRegexp,
                    },
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue: null,
                    transform: {
                        upperCase: dispMeta?.charCase == 'upper'? true:null,
                        lowerCase: dispMeta?.charCase == 'lower'? true:null
                    }
                }
            ]]></source>
        </edit-ascii>

        <edit-asciiNum>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true,
                    validations: {
                        isAlphanumeric:true,
                        maxLength: dispMeta?.maxLength ?? propMeta?.schema?.precision,
                        minLength: dispMeta?.minLength,
                        matchRegexp: dispMeta?.matchRegexp,
                    },
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null
                }
            ]]></source>
        </edit-asciiNum>

        <edit-path>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true,
                    validations: {
                        isUrlPath:true,
                        maxLength: dispMeta?.maxLength ?? propMeta?.schema.precision,
                        minLength: dispMeta?.minLength,
                        matchRegexp: dispMeta?.matchRegexp,
                    },
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue: null,
                    transform: {
                        upperCase: dispMeta?.charCase == 'upper'? true:null,
                        lowerCase: dispMeta?.charCase == 'lower'? true:null
                    }
                }
            ]]></source>
        </edit-path>

        <edit-phone>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true,
                    validations: {
                        isPhoneNumber:true,
                        maxLength: dispMeta?.maxLength ?? propMeta?.schema?.precision,
                        minLength: dispMeta?.minLength,
                        matchRegexp: dispMeta?.matchRegexp,
                    },
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null,
                }
            ]]></source>
        </edit-phone>

        <edit-telephone>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true,
                    validations: {
                        isTelPhoneNumber:true,
                        maxLength: dispMeta?.maxLength ?? propMeta?.schema?.precision,
                        minLength: dispMeta?.minLength,
                        matchRegexp: dispMeta?.matchRegexp,
                    },
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null,
                }
            ]]></source>
        </edit-telephone>

        <edit-date>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-date',
                    format:"YYYY-MM-DD",
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null
                }
            ]]></source>
        </edit-date>

        <edit-datetime>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-datetime',
                    format:"YYYY-MM-DD HH:mm:ss",
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue: null
                }
            ]]></source>
        </edit-datetime>

        <edit-timestamp x:prototype="edit-datetime"/>

        <!--
        可以支持图片
        -->
        <edit-list-select>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="mandatory"/>
            <attr name="editMode"/>

            <source><![CDATA[
                 return {
                    type: 'list-select',
                    clearable: true,
                    selectFirst: dispMeta?.selectFirst,
                    source: '@dict:' + propMeta?.schema?.dict,
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null,
                 }
            ]]></source>
        </edit-list-select>

        <edit-radios>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="mandatory"/>
            <attr name="editMode"/>

            <source><![CDATA[
                 return {
                    type: 'radios',
                    clearable: true,
                    source: '@dict:' + propMeta?.schema?.dict,
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null,
                 }
            ]]></source>
        </edit-radios>

        <edit-enum>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="mandatory"/>
            <attr name="editMode"/>

            <source><![CDATA[
                 return {
                    type: 'select',
                    searchable: true,
                    clearable: true,
                    multiple: false,
                    selectFirst: dispMeta?.selectFirst,
                    source: '@dict:' + propMeta?.schema.dict,
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null,
                 }
            ]]></source>
        </edit-enum>

        <view-enum x:prototype="view-labelProp"/>

        <view-labelProp>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="mandatory"/>
            <attr name="editMode"/>

            <source><![CDATA[
                const labelProp = propMeta?.['graphql:labelProp']
                if(labelProp){
                    return {
                        type:"static",
                        name: labelProp
                    }
                }else{
                    return {
                        type:"static"
                    }
                }
            ]]></source>
        </view-labelProp>


        <edit-textarea>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>

            <source><![CDATA[
                return {
                    type: "textarea",
                    minRows: dispMeta?.minRows || 3,
                    maxLength: dispMeta?.maxLength
                }
            ]]></source>
        </edit-textarea>

        <edit-html>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>

            <source><![CDATA[
                return {
                    type: "input-rich-text"
                }
            ]]></source>
        </edit-html>

        <view-html>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>

            <source><![CDATA[
                return {
                    type: "tpl",
                    tpl: "${" + (dispMeta?.id || propMeta.name) + "|raw}"
                }
            ]]></source>
        </view-html>

        <edit-longtext x:prototype="edit-textarea"/>

        <edit-remark x:prototype="edit-textarea"/>

        <!--        <view-image>-->
        <!--            <attr name="dispMeta"/>-->
        <!--            <attr name="propMeta"/>-->

        <!--            <source><![CDATA[-->
        <!--                return {-->
        <!--                    "type": "image"-->
        <!--                }-->
        <!--            ]]></source>-->
        <!--        </view-image>-->

        <!--        <edit-image>-->
        <!--            <attr name="dispMeta"/>-->
        <!--            <attr name="propMeta"/>-->

        <!--            <source><![CDATA[-->
        <!--                return {-->
        <!--                    "type": "input-image",-->
        <!--                    "receiver": dispMeta?.uploadUrl || '/upload/image'-->
        <!--                }-->
        <!--            ]]></source>-->
        <!--        </edit-image>-->

        <edit-tag-list>
            <description>json数组类型的标签列表</description>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>
            <attr name="objMeta" mandatory="true"/>
            <attr name="bizObjName" mandatory="true"/>

            <source><![CDATA[
           return {
              type: "input-tag",
              clearable:true
            }
        ]]></source>
        </edit-tag-list>

        <view-tag-list>
            <description>json数组类型的标签列表</description>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>
            <attr name="objMeta" mandatory="true"/>
            <attr name="bizObjName" mandatory="true"/>

            <source><![CDATA[
           return {
              type: "input-tag",
              disabled:true
            }
        ]]></source>
        </view-tag-list>

        <view-image>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>
            <attr name="objMeta" mandatory="true"/>
            <attr name="bizObjName" mandatory="true"/>

            <source><![CDATA[
                return {
                  type: 'static-image',
                  enlargeAble: true,
                }
            ]]></source>
        </view-image>

        <list-view-image>
            <source><![CDATA[
                return {
                  type: 'static-image',
                  enlargeAble: true,
                  width: 40,
                  height: 40
                }
            ]]></source>
        </list-view-image>

        <edit-image>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="bizObjName" mandatory="true"/>
            <source>
                <thisLib:edit-file dispMeta="${dispMeta}" propMeta="${propMeta}" bizObjName="${bizObjName}"
                                   accept=".jpg,.png,.gif,.icon,.svg,.bmp"/>
            </source>
        </edit-image>

        <edit-file>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="bizObjName" mandatory="true"/>
            <attr name="accept" optional="true"/>

            <source><![CDATA[
              import io.nop.xui.utils.XuiHelper;
              const name = propMeta?.name || dispMeta.id
              const maxSize = XuiHelper.getMaxUploadSize(propMeta,dispMeta);
              const uploadUrl = dispMeta?.uploadUrl || propMeta?.['ui:uploadUrl']
                  || ($config.var('nop.file.upload-url','/f/upload') + '?bizObjName='+bizObjName.$encodeURL()+'&fieldName='+name.$encodeURL())
              const supportFileLink = dispMeta?.['ui:supportFileLink'] ?? propMeta?.['ui:supportFileLink'] ?? false
              accept = propMeta?.['ui:uploadAccept'] || dispMeta?.['ui:uploadAccept'] || accept

              if(supportFileLink){
              return {
                        "type": "input-group",
                        "name": "__group_" + name,
                        "body": [
                          {
                            "type": "checkbox",
                            "name": "__switch_" + name
                          },
                          {
                            "type": "input-text",
                            "name": name,
                            "visibleOn": '${__switch_' + name + '}',
                            placeholder: "输入文件链接"
                          },
                          {
                            "type": "input-file",
                            "name": name,
                            "maxSize":maxSize,
                            "visibleOn": '${!__switch_' + name + '}',
                            "accept":accept,
                            "receiver": uploadUrl,
                            "useChunk":false
                          }
                        ]
                      }
              }else{
                 return {
                            "type": "input-file",
                            "maxSize":maxSize,
                            "accept":accept,
                            "receiver": uploadUrl,
                            "useChunk":false
                          }
              }
            ]]></source>
        </edit-file>

        <view-file>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="bizObjName" mandatory="true"/>
            <attr name="accept" optional="true"/>

            <source><![CDATA[
                return {
                    "type": "group",
                    "body" : {
                        "type": "action",
                        "visibleOn": "${" + propMeta.name+" != null}",
                        "actionType": "download",
                        "label": "${"+propMeta.name+"ComponentFileStatus.name}(${"+propMeta.name+"ComponentFileStatus.fileSize})",
                        "leve": "link",
                        "api": {
                            method: "get",
                            url: "${" + propMeta.name+"}",
                            data: {},
                            responseType: "blob"
                        }
                    }
                }
            ]]></source>
        </view-file>

        <view-images>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>

            <source><![CDATA[
                return {
                    "type": "static-images",
                    "name": propMeta ? propMeta.name + 'Component' : (dispMeta.id || propMeta.name),
                    "enlargeAble": true
                }
            ]]></source>
        </view-images>

        <edit-images>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>

            <source><![CDATA[
                return {
                    type: 'input-array',
                    "name": propMeta ? propMeta.name + 'Component' : (dispMeta.id || propMeta.name),
                    items:{
                       type: 'input-text',
                       required:true,
                       placeholder: '输入图片地址'
                    }
                }
            ]]></source>
        </edit-images>

        <edit-string-array>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>

            <source><![CDATA[
                return {
                    type: 'input-array',
                    "name": propMeta ? propMeta.name + 'Component' : (dispMeta.id || propMeta.name),
                    items:{
                       type: 'input-text',
                       required:true,
                       validations:{
                         maxLength: ((dispMeta?.maxLength ?? propMeta?.schema?.precision)/2).$toInt()
                       }
                    }
                }
            ]]></source>
        </edit-string-array>

        <edit-deptId outputMode="xjson">
            <attr name="dispMeta"/>
            <attr name="propMeta"/>

            <source>
                <tree-select clearable="@:true">
                    <source>
                        <!--
                        Amis并不允许url中包含空格和回车。Nop平台为了简化代码编写，在后台通过WebPageHelper.fixPage函数进行了规范化处理
                        -->
                        <url>@query:NopAuthDept__findList/value:id,label:deptName,
                            children @TreeChildren(max:5)?filter_parentId=__null
                        </url>
                    </source>
                </tree-select>
            </source>
        </edit-deptId>

        <view-boolean x:prototype="view-boolFlag"/>

        <edit-boolean x:prototype="edit-boolFlag"/>

        <view-boolFlag>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <!--            <source><![CDATA[-->
            <!--                return {-->
            <!--                    "type": "switch",-->
            <!--                    "trueValue": 1,-->
            <!--                    "falseValue": 0,-->
            <!--                    "disabled": true-->
            <!--                }-->
            <!--            ]]></source>-->
            <source><![CDATA[
                return {
                        "type": "static-mapping",
                        "map": {
                            "1": "<span class='label label-success'>{@i18n:common.yes}</span>",
                            "0": "<span class='label label-warning'>{@i18n:common.no}</span>",
                            "true": "<span class='label label-success'>{@i18n:common.yes}</span>",
                            "false": "<span class='label label-warning'>{@i18n:common.no}</span>",
                            "" : "",
                        }
                    }
            ]]></source>
        </view-boolFlag>

        <edit-boolFlag>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="mandatory"/>
            <attr name="editMode"/>

            <source><![CDATA[
                let defaultValue =  editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null;
                if(mandatory && defaultValue == null)
                   defaultValue = 0;

                return {
                    "type": "switch",
                    "trueValue": 1,
                    "falseValue": 0,
                     value: defaultValue,
                }
            ]]></source>
        </edit-boolFlag>

        <view-pre>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>

            <source><![CDATA[
                return {
                    type:'pre-static'
                }
            ]]></source>
        </view-pre>

        <edit-string>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true,
                    validations: {
                        maxLength: dispMeta?.maxLength ?? propMeta?.schema?.precision,
                        minLength: dispMeta?.minLength,
                        matchRegexp: dispMeta?.matchRegexp,
                    },
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null,
                    transform: {
                        upperCase: dispMeta?.charCase == 'upper'? true:null,
                        lowerCase: dispMeta?.charCase == 'lower'? true:null
                    }
                }
            ]]></source>
        </edit-string>

        <query-string>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type:'input-text',
                    clearable:true
                }
            ]]></source>
        </query-string>

        <query-datetime>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                const name = propMeta?.name || dispMeta.id
                const shortcuts = dispMeta?.['ui:shortcuts'] || propMeta?.['ui:shortcuts']
                return {
                    name: "filter_"+name + "__dateTimeBetween",
                    "type": "input-datetime-range",
                     "timeFormat": "HH:mm:ss",
                     "inputFormat": "YYYY-MM-DD HH:mm:ss",
                     "valueFormat": "YYYY-MM-DD HH:mm:ss",
                     "shortcuts": shortcuts || "today,yesterday,1dayago,7daysago"
                }
            ]]></source>
        </query-datetime>

        <query-date>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                const name = propMeta?.name || dispMeta.id
                const shortcuts = dispMeta?.['ui:shortcuts'] || propMeta?.['ui:shortcuts']
                return {
                    name: "filter_"+name + "__dateBetween",
                    "type": "input-date-range",
                    "inputFormat": "YYYY-MM-DD",
                    "shortcuts": shortcuts || "today,yesterday,1dayago,7daysago"
                }
            ]]></source>
        </query-date>

        <query-timestamp x:prototype="query-datetime"/>

        <edit-relation>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                import io.nop.xui.utils.XuiHelper;
                const relProp = XuiHelper.getRelationProp(propMeta,objMeta);

                return _.filterNull({
                    type: 'picker',
                    'x:extends': XuiHelper.getRelationPickerUrl(dispMeta,propMeta,objMeta),
                    valueField: relProp['ext:joinRightProp'],
                    labelField: relProp['ext:joinRightDisplayProp'] || relProp['ext:joinRightProp'],
                    source: _.filterNull({
                       // 前端AMIS控件在初始化数据的时候会把source转换成loadOptions调用，
                       // 但此时无法自动获取到外层的valueField配置，所以这里只能重复设置一下。
                       valueField: relProp['ext:joinRightProp'],
                       labelField: relProp['ext:joinRightDisplayProp'] || relProp['ext:joinRightProp']
                    }),
                    joinValues: false,
                    extractValue:true,
                    multiple: propMeta.type?.collectionLike || propMeta.listSchema,
                })
            ]]></source>
        </edit-relation>

        <edit-roleId>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type: 'picker',
                    'x:extends': '/nop/auth/pages/NopAuthRole/picker.page.yaml',
                    valueField: 'roleId',
                    labelField: 'roleName',
                    source: {
                       // 前端AMIS控件在初始化数据的时候会把source转换成loadOptions调用，
                       // 但此时无法自动获取到外层的valueField配置，所以这里只能重复设置一下。
                       valueField: 'roleId',
                       labelField: 'roleName',
                    },
                    joinValues: false,
                    extractValue:true,
                    multiple: false
                }
            ]]></source>
        </edit-roleId>

        <edit-userId>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                return {
                    type: 'picker',
                    'x:extends': '/nop/auth/pages/NopAuthUser/picker.page.yaml',
                    valueField: 'userId',
                    labelField: 'userName',
                    source: {
                       // 前端AMIS控件在初始化数据的时候会把source转换成loadOptions调用，
                       // 但此时无法自动获取到外层的valueField配置，所以这里只能重复设置一下。
                       valueField: 'userId',
                       labelField: 'userName',
                    },
                    joinValues: false,
                    extractValue:true,
                    multiple: false
                }
            ]]></source>
        </edit-userId>

        <view-relation>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                import io.nop.xui.utils.XuiHelper;
                const relProp = XuiHelper.getRelationProp(propMeta,objMeta);

                const labelProp = propMeta['graphql:labelProp'] || relProp['ext:joinRightDisplayProp'];

                if(labelProp){
                    return {
                       type: 'static',
                       name: propMeta['graphql:labelProp'] || relProp.name+'.'+relProp['ext:joinRightDisplayProp']
                    }
                }else{
                    return { type: 'static'}
                }
            ]]></source>
        </view-relation>

        <edit-to-one x:prototype="edit-relation"/>

        <view-to-one x:prototype="view-relation"/>

        <edit-to-many>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>

            <source>
                <c:choose>
                    <when test="${propMeta?.containsTag('grid') and propMeta['ui:editGrid']}">
                        <c:script>
                            import io.nop.xui.utils.XuiHelper;
                            const viewPath = XuiHelper.getRelationViewUrl(propMeta,objMeta);
                        </c:script>
                        <web:GenInputTable grid="${propMeta['ui:editGrid']}" view="${viewPath}"
                                           xpl:lib="/nop/web/xlib/web.xlib"/>
                    </when>
                    <otherwise>
                        <thisLib:edit-relation dispMeta="${dispMeta}" propMeta="${propMeta}"
                                               objMeta="${objMeta}" editMode="${editMode}"/>
                    </otherwise>
                </c:choose>

            </source>
        </edit-to-many>

        <view-to-many>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>

            <source>
                <c:choose>
                    <when test="${propMeta?.containsTag('grid') and propMeta['ui:viewGrid']}">
                        <c:script>
                            import io.nop.xui.utils.XuiHelper;
                            const viewPath = XuiHelper.getRelationViewUrl(propMeta,objMeta);
                        </c:script>
                        <web:GenTable grid="${propMeta['ui:viewGrid']}" view="${viewPath}"
                                      xpl:lib="/nop/web/xlib/web.xlib"/>
                    </when>
                    <otherwise>
                        <thisLib:view-relation dispMeta="${dispMeta}" propMeta="${propMeta}"
                                               objMeta="${objMeta}" editMode="${editMode}"/>
                    </otherwise>
                </c:choose>
            </source>
        </view-to-many>

        <edit-password>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>
            <source><![CDATA[
                return {
                    type: 'input-password'
                }
            ]]></source>
        </edit-password>

        <view-password>
            <source><![CDATA[
                return { type:'static', value: '***'}
            ]]></source>
        </view-password>

        <edit-hidden>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>
            <source><![CDATA[
                return {
                    type: 'hidden'
                }
            ]]></source>
        </edit-hidden>

        <view-hidden x:prototype="edit-hidden"/>

        <edit-any x:prototype="edit-string"/>

        <view-any x:prototype="view-labelProp">
        </view-any>

        <view-xml>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>
            <source><![CDATA[
                return {
                    type: 'code',
                    language: "xml"
                }
            ]]></source>
        </view-xml>

        <edit-xml>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>
            <source><![CDATA[
                return {
                    type: 'editor',
                    language: "xml"
                }
            ]]></source>
        </edit-xml>

        <view-xpl x:prototype="view-xml"/>

        <edit-xpl x:prototype="edit-xml"/>

        <edit-select>
            <attr name="dispMeta"/>
            <attr name="propMeta"/>
            <attr name="objMeta"/>
            <attr name="editMode"/>

            <source><![CDATA[
                 return {
                    type: 'select',
                    searchable: true,
                    clearable: true,
                    multiple: false,
                    selectFirst: dispMeta?.selectFirst,
                    source: dispMeta?.sourceUrl,
                    value: editMode == 'add' ? dispMeta?.defaultValue ?? propMeta?.defaultValue : null,
                 }
            ]]></source>
        </edit-select>
    </tags>
</lib>